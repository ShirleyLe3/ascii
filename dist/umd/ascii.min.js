((t,e)=>{"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.ASCII=e()})(this,function(){"use strict";const t=t=>t>.04045?((t+.055)/1.055)**2.4:t/12.92,{clz32:e,max:i,round:s}=Math,n=function*(t,e,i=1){for(let s=t;e>s;s+=i)yield s},r=Object.assign,a=t=>r({},t),o=t=>e=>r(document.createElement(t),e),u=t=>o("canvas")(t).getContext("2d"),l=(t=>e=>(...i)=>e.replace(t,(t,e)=>((t,e,i=".")=>e.split(i).reduce((t,e)=>t&&t[e],t))(i,e)))(/#{(.*?)}/g);class h{constructor(t,e){this.regl=t,this.binds=e}compile(...t){const e=a(this.binds),{vert:i,frag:s}=e;i&&(e.vert=l(i)(...t)),s&&(e.frag=l(s)(...t)),this.command=this.regl(e)}}const d="attribute vec2 aPosition;varying vec2 vPosition;void main(){vPosition=0.5+(0.5*aPosition);gl_Position=vec4(aPosition,0.,1.);}";class c extends h{constructor(t){super(t,{vert:d,depth:{enable:!1},attributes:{aPosition:[1,1,-1,1,1,-1,-1,-1]},primitive:"triangle strip",count:4})}}const f="#define MAP3(f,v) vec3(f(v.x),f(v.y),f(v.z))\n#define RGB(x) mix(x/12.92,pow((x+.055)/1.055,2.4),step(.04045,x))\n#define LUM(x) dot(x,vec3(.212655,.715158,.072187))\nprecision mediump float;uniform sampler2D uSrc;uniform float uBrightness;uniform float uGamma;uniform float uNoise;uniform float uTime;varying vec2 vPosition;float hash13(vec3 p3){p3=fract(p3*0.1031);p3+=dot(p3,p3.yzx+19.19);return fract((p3.x+p3.y)*p3.z);}void main(){vec3 srgb=texture2D(uSrc,vPosition).rgb;float signal=uBrightness*pow(LUM(MAP3(RGB,srgb)),uGamma);float noise=uNoise*(hash13(vec3(gl_FragCoord.xy,uTime))-0.5);gl_FragColor=vec4(signal+noise,0.,0.,0.);}";class g extends h{constructor(t){super(t,{frag:f,framebuffer:t.prop("dst"),uniforms:{uSrc:t.prop("src"),uBrightness:t.prop("brightness"),uGamma:t.prop("gamma"),uNoise:t.prop("noise"),uTime:t.context("time")}})}}const m="#define TEX(s,size,uv,xy) texture2D(s,uv+(xy+.5)/size)\n#define MOD(x,y) (x-(x/y*y))\n#define false 0\n#define true 1\n#define O #{0.settings.optimized}\n#define U #{0.settings.lutWidth}\n#define V #{0.settings.lutHeight}\n#define X #{0.luts.0.length}\n#define Y #{0.luts.length}\nprecision mediump float;uniform sampler2D uSrc;uniform sampler2D uLut;uniform vec2 uSrcSize;uniform vec2 uLutSize;varying vec2 vPosition;void main(){float bestDelta=3.402823e+38;int bestChar=0;\n#if O\nfloat deltas[Y];for(int x=0;x<X;x++){int u=MOD(x,U),v=x/U;float a=TEX(uSrc,uSrcSize,vPosition,vec2(u,v)).r;for(int y=0;y<Y;y++){float b=TEX(uLut,uLutSize,0.,vec2(x,y)).r;deltas[y]+=abs(a-b);}}for(int y=0;y<Y;y++){float delta=deltas[y];if(delta<bestDelta){bestDelta=delta;bestChar=y;}}\n#else\nfor(int y=0;y<Y;y++){int x=0;float delta=0.;for(int v=0;v<V;v++){for(int u=0;u<U;u++){float a=TEX(uSrc,uSrcSize,vPosition,vec2(u,v)).r;float b=TEX(uLut,uLutSize,0.,vec2(x++,y)).r;delta+=abs(a-b);}}if(delta<bestDelta){bestDelta=delta;bestChar=y;}}\n#endif\ngl_FragColor=vec4(bestChar,0,0,0)/255.;}";class p extends h{constructor(t){super(t,{frag:m,framebuffer:t.prop("dst"),context:{src:t.prop("src"),lut:t.prop("lut")},uniforms:{uSrc:t.context("src"),uLut:t.context("lut"),uSrcSize:({src:t})=>[t.width,t.height],uLutSize:({lut:t})=>[t.width,t.height]}})}}class v{constructor(t){this.ascii=t,this.bytes=new Uint8Array(1);const{regl:e}=t;this.src=e.texture(),this.lut=e.texture(),this.fbo1=e.framebuffer({depthStencil:!1,colorType:"float"}),this.fbo2=e.framebuffer({depthStencil:!1}),this.setup=new c(e),this.pass1=new g(e),this.pass2=new p(e)}update(){const{ascii:t}=this;this.lut({format:"alpha",type:"float",data:t.luts}),this.setup.compile(t),this.pass1.compile(t),this.pass2.compile(t)}render(t,e,i){const{ascii:s,src:n,lut:r,fbo1:a,fbo2:o}=this,{regl:u,settings:l}=s,{brightness:h,gamma:d,noise:c}=l,f=l.lutWidth*e,g=l.lutHeight*i,m=e*i<<2;return this.bytes.length!==m&&(this.bytes=new Uint8Array(m)),n(t),a.resize(f,g),o.resize(e,i),u.poll(),this.setup.command(()=>{this.pass1.command({dst:a,src:n,brightness:h,gamma:d,noise:c}),this.pass2.command({dst:o,src:a,lut:r},()=>{u.draw(),u.read(this.bytes)})}),this.bytes}}class y{constructor(){this.optimized=!0,this.fontFace="monospace",this.fontWidth=40,this.fontHeight=70,this.fontBlur=6,this.lutWidth=5,this.lutHeight=7,this.lutPadding=1,this.brightness=1,this.gamma=1,this.noise=0}}class x extends y{get lutWidthPadded(){return 2*this.lutPadding+this.lutWidth}get lutHeightPadded(){return 2*this.lutPadding+this.lutHeight}get lutWidthRatio(){return this.lutWidthPadded/this.lutWidth}get lutHeightRatio(){return this.lutHeightPadded/this.lutHeight}get fontWidthPadded(){return s(this.lutWidthRatio*this.fontWidth)}get fontHeightPadded(){return s(this.lutHeightRatio*this.fontHeight)}}const b=t=>1<<i(0,31-e(t)),S="imageSmoothingQuality"in CanvasRenderingContext2D.prototype?(t,e,i)=>{const s=u({width:e,height:i});return s.imageSmoothingQuality="medium",s.drawImage(t.canvas,0,0,e,i),s}:(t,e,i)=>{let s=b(t.canvas.width/e-1)*e,n=b(t.canvas.height/i-1)*i;const r=u({width:s,height:n});r.drawImage(t.canvas,0,0,s,n);for(let t,a;(t=s>e)||(a=n>i);)r.drawImage(r.canvas,0,0,s,n,0,0,s>>=t,n>>=a);const a=u({width:e,height:i});return a.drawImage(r.canvas,0,0),a};return class{constructor(t,e){this.settings=new x,this.charMap=Uint8Array.from(n(32,127));const i=o("canvas")();this.regl=t({canvas:i,extensions:["OES_texture_float"]}),this.renderer=new v(this),this.update(e)}makeGlyph(t){const{fontFace:e,fontBlur:i,fontWidth:s,fontHeight:n,fontWidthPadded:r,fontHeightPadded:a}=this.settings,o=u({width:r,height:a}),l=String.fromCharCode(t);o.fillStyle="#00f",o.fillRect(0,0,r,a),o.fillStyle="#000",o.translate(r/2,a/2),o.fillRect(-s/2,-n/2,s,n),o.fillStyle="#fff",o.textAlign="center",o.font=`${n}px ${e}`,o.translate(0,n/4);for(let t=0;i>t;)o.filter=`blur(${1<<t}px)`,o.globalAlpha=++t/i,o.fillText(l,0,0);return o}makeLut(t){const{lutWidth:e,lutHeight:i,lutPadding:s,lutWidthPadded:n,lutHeightPadded:r}=this.settings,a=S(this.makeGlyph(t),n,r).getImageData(s,s,e,i).data,o=new Float32Array(a.length>>2);for(let t=0;o.length>t;t++)o[t]=a[t<<2]/255;return o}makeLuts(){const e=Array.from(this.charMap,t=>this.makeLut(t)),s=e.reduce((t,e)=>i(t,i(...e)),0);return e.forEach(e=>e.forEach((i,n)=>e[n]=t(i/s))),e}update(t){r(this.settings,t),this.luts=this.makeLuts(),this.renderer.update()}render(t,e,i){const{renderer:s,charMap:n}=this,r=s.render(t,e,i);let a=0,o=0;for(let t=0;i>t;t++){for(let t=0;e>t;t++)r[a++]=n[r[o++<<2]];r[a++]=10}const u=r.subarray(0,a);return String.fromCharCode(...u)}}});
//# sourceMappingURL=ascii.min.js.map
