{"version":3,"file":"ascii.js","sources":["../../node_modules/wheels/esm/color/srgb.js","../../node_modules/wheels/esm/math/native.js","../../node_modules/wheels/esm/fp/iter.js","../../node_modules/wheels/esm/object/index.js","../../node_modules/wheels/esm/dom/index.js","../../node_modules/wheels/esm/text/template.js","../../src/classes/Shader.ts","../../src/classes/shaders/Setup.ts","../../src/classes/shaders/Pass1.ts","../../src/classes/shaders/Pass2.ts","../../src/classes/Renderer.ts","../../src/classes/ASCIICoreSettings.ts","../../src/classes/ASCIISettings.ts","../../src/downscale.ts","../../src/classes/ASCII.ts"],"sourcesContent":["export const rgb = (srgb) => srgb <= 0.04045 ? srgb / 12.92 : ((srgb + 0.055) / 1.055) ** 2.4;\nexport const srgb = (rgb) => rgb <= 0.0031308 ? rgb * 12.92 : (rgb ** (1 / 2.4)) * 1.055 - 0.055;\n","export const { abs, acos, acosh, asin, asinh, atan, atan2, atanh, cbrt, ceil, clz32, cos, cosh, exp, expm1, floor, fround, hypot, imul, log, log10, log1p, log2, max, min, pow, random, round, sign, sin, sinh, sqrt, tan, tanh, trunc, E, LN10, LN2, LOG10E, LOG2E, PI, SQRT1_2, SQRT2 } = Math;\nexport const { isFinite, isInteger, isNaN, isSafeInteger, parseFloat, parseInt, EPSILON, MAX_SAFE_INTEGER, MAX_VALUE, MIN_SAFE_INTEGER, MIN_VALUE, NEGATIVE_INFINITY, POSITIVE_INFINITY } = Number;\n","export const filter = (fn) => function* (it) {\n    for (const value of it)\n        if (fn(value))\n            yield value;\n};\nexport const map = (fn) => function* (it) {\n    for (const value of it)\n        yield fn(value);\n};\nexport const reduce = (fn) => (acc) => (it) => {\n    let acc聞 = acc;\n    for (const value of it)\n        acc聞 = fn(acc聞, value);\n    return acc聞;\n};\nexport const range = function* (min, max, step = 1) {\n    for (let number = min; number < max; number += step)\n        yield number;\n};\nexport const matcher = (re) => function* (input) {\n    for (let match; match = re.exec(input);)\n        yield match;\n};\n","export const extend = Object.assign;\nexport const overwrite = extend;\nexport const copy = (object) => overwrite({}, object);\nexport const get = (object, path, sep = '.') => path.split(sep).reduce((o, next) => o && o[next], object);\nexport const proto = (object) => {\n    const props = new Set();\n    for (let o = object; o && o !== Object.prototype; o = Object.getPrototypeOf(o))\n        Object.getOwnPropertyNames(o).forEach(prop => props.add(prop));\n    return props;\n};\n","import { overwrite } from '../object';\nexport const element = name => options => overwrite(document.createElement(name), options);\nexport const append = (parent) => (...children) => children.forEach(child => parent.appendChild(child));\nexport const prevent = (fn) => (event) => { event.preventDefault(); fn && fn(event); };\nexport const frame = () => new Promise(resolve => requestAnimationFrame(resolve));\nexport const context2d = (options) => element('canvas')(options).getContext('2d');\n","export const renderer = (tmpl, arg = '$') => new Function(arg, 'return `' + tmpl + '`');\nexport const render = (tmpl, obj) => renderer(tmpl, '{' + Object.keys(obj) + '}')(obj);\n","import { render } from 'wheels/esm/text/template'\n\nexport class Shader {\n  command: any\n\n  constructor(\n    private readonly regl: any,\n    private readonly binds: any\n  ) {}\n\n  compile(arg: any) {\n    const { regl, binds } = this\n    const { vert, frag } = binds\n    this.command = regl({\n      ...binds,\n      ...vert && { vert: render(vert, arg) },\n      ...frag && { frag: render(frag, arg) }\n    })\n  }\n}\n","import { Shader } from '../Shader'\nimport vert from 'glsl/setup.vert'\n\nexport class Setup extends Shader {\n  constructor(regl: any) {\n    super(regl, {\n      vert,\n      depth: {\n        enable: false\n      },\n      attributes: {\n        aPosition: [1, 1, -1, 1, 1, -1, -1, -1]\n      },\n      primitive: 'triangle strip',\n      count: 4\n    })\n  }\n}\n","import { Shader } from '../Shader'\nimport frag from 'glsl/pass1.frag'\n\nexport class Pass1 extends Shader {\n  constructor(regl: any) {\n    super(regl, {\n      frag,\n      framebuffer: regl.prop('dst'),\n      uniforms: {\n        uSrc: regl.prop('src'),\n        uBrightness: regl.prop('brightness'),\n        uGamma: regl.prop('gamma'),\n        uNoise: regl.prop('noise'),\n        uTime: regl.context('time')\n      }\n    })\n  }\n}\n","import { Shader } from '../Shader'\nimport frag from 'glsl/pass2.frag'\n\nexport class Pass2 extends Shader {\n  constructor(regl: any) {\n    super(regl, {\n      frag,\n      framebuffer: regl.prop('dst'),\n      context: {\n        src: regl.prop('src'),\n        lut: regl.prop('lut')\n      },\n      uniforms: {\n        uSrc: regl.context('src'),\n        uLut: regl.context('lut'),\n        uSrcSize: ({ src }: any) => [ src.width, src.height ],\n        uLutSize: ({ lut }: any) => [ lut.width, lut.height ]\n      }\n    })\n  }\n}\n","import { overwrite } from 'wheels/esm/object'\nimport { context2d } from 'wheels/esm/dom'\nimport { Setup } from './shaders/Setup'\nimport { Pass1 } from './shaders/Pass1'\nimport { Pass2 } from './shaders/Pass2'\nimport { ASCII } from './ASCII'\n\nexport type Renderable =\n  HTMLImageElement  |\n  HTMLCanvasElement |\n  HTMLVideoElement  |\n  ImageBitmap\n\nexport class Renderer {\n  private readonly src: any // regl textures\n  private readonly lut: any\n\n  private readonly fbo1: any // regl framebufers\n  private readonly fbo2: any\n\n  private readonly setup: Setup\n  private readonly pass1: Pass1\n  private readonly pass2: Pass2\n\n  private readonly context = context2d()\n  private readonly canvas = this.context.canvas\n  private bytes = new Uint8Array(1)\n\n  constructor(private readonly ascii: ASCII) {\n    const { regl } = ascii\n\n    this.src = regl.texture()\n    this.lut = regl.texture()\n\n    this.fbo1 = regl.framebuffer({ depthStencil: false, colorType: 'float' })\n    this.fbo2 = regl.framebuffer({ depthStencil: false })\n\n    this.setup = new Setup(regl)\n    this.pass1 = new Pass1(regl)\n    this.pass2 = new Pass2(regl)\n  }\n\n  private resize(renderable: Renderable, width: number, height: number) {\n    const { context, canvas, ascii: { settings: { quality } } } = this\n\n    if (quality === 'low')\n      return renderable\n\n    if (canvas.width !== width || canvas.height !== height) {\n      overwrite(canvas, { width, height })\n      context.imageSmoothingQuality = quality\n    }\n\n    context.drawImage(renderable, 0, 0, width, height)\n\n    return canvas\n  }\n\n  update() {\n    const { ascii } = this\n\n    this.lut({\n      format: 'alpha',\n      type: 'float',\n      data: ascii.luts\n    })\n\n    this.setup.compile(ascii)\n    this.pass1.compile(ascii)\n    this.pass2.compile(ascii)\n  }\n\n  render(renderable: Renderable, width: number, height: number) {\n    const { src, lut, fbo1, fbo2, ascii: { regl, settings } } = this\n    const { brightness, gamma, noise } = settings\n\n    const w = settings.lutWidth  * width\n    const h = settings.lutHeight * height\n\n    const length = width * height << 2\n    if (this.bytes.length !== length)\n      this.bytes = new Uint8Array(length)\n\n    src(this.resize(renderable, w, h))\n\n    fbo1.resize(w, h)\n    fbo2.resize(width, height)\n    regl.poll()\n\n    this.setup.command(() => {\n      this.pass1.command({ dst: fbo1, src, brightness, gamma, noise })\n      this.pass2.command({ dst: fbo2, src: fbo1, lut }, () => {\n        regl.draw()\n        regl.read(this.bytes)\n      })\n    })\n\n    return this.bytes\n  }\n}\n","export class ASCIICoreSettings {\n  optimized  = true\n  quality    = 'high' as ImageSmoothingQuality\n  fontFace   = 'monospace'\n  fontWidth  = 40\n  fontHeight = 70\n  fontBlur   = 6\n  lutWidth   = 5\n  lutHeight  = 7\n  lutPadding = 1\n  brightness = 1\n  gamma      = 1\n  noise      = 0\n}\n","import { round } from 'wheels/esm/math'\nimport { ASCIICoreSettings } from './ASCIICoreSettings'\n\nexport class ASCIISettings extends ASCIICoreSettings {\n  get lutWidthPadded()   { return this.lutPadding*2 + this.lutWidth }\n  get lutHeightPadded()  { return this.lutPadding*2 + this.lutHeight }\n  get lutWidthRatio()    { return this.lutWidthPadded  / this.lutWidth }\n  get lutHeightRatio()   { return this.lutHeightPadded / this.lutHeight }\n  get fontWidthPadded()  { return round(this.lutWidthRatio  * this.fontWidth) }\n  get fontHeightPadded() { return round(this.lutHeightRatio * this.fontHeight) }\n}\n","import { max, clz32 } from 'wheels/esm/math'\nimport { context2d } from 'wheels/esm/dom'\n\n/** Most Significant Bit, but f(x) is always >=1 */\nconst msb = (n: number) => 1 << max(0, 31 - clz32(n))\n\nconst fallback = (src: CanvasRenderingContext2D, width: number, height: number) => {\n  let w = msb(src.canvas.width  / width  - 1) * width\n  let h = msb(src.canvas.height / height - 1) * height\n\n  const tmp = context2d({ width: w, height: h })\n  tmp.drawImage(src.canvas, 0, 0, w, h)\n  for (let x: any, y: any; (x = w > width) || (y = h > height);)\n    tmp.drawImage(tmp.canvas, 0, 0, w, h, 0, 0, w >>= x, h >>= y)\n\n  const dst = context2d({ width, height })\n  dst.drawImage(tmp.canvas, 0, 0)\n  return dst\n}\n\nconst native = (src: CanvasRenderingContext2D, width: number, height: number) => {\n  const dst = context2d({ width, height })\n  dst.imageSmoothingQuality = 'medium'\n  dst.drawImage(src.canvas, 0, 0, width, height)\n  return dst\n}\n\nexport const downscale =\n  'imageSmoothingQuality' in CanvasRenderingContext2D.prototype\n    ? native\n    : fallback\n","import { rgb } from 'wheels/esm/color/srgb'\nimport { max, floor } from 'wheels/esm/math'\nimport { range } from 'wheels/esm/fp'\nimport { overwrite } from 'wheels/esm/object'\nimport { element, context2d } from 'wheels/esm/dom'\nimport { Renderer, Renderable } from './Renderer'\nimport { ASCIICoreSettings } from './ASCIICoreSettings'\nimport { ASCIISettings } from './ASCIISettings'\nimport { downscale } from '../downscale'\n\nconst charCodes = function* () {\n  yield* range(0x20, 0x7f)\n  yield* range(0xa1, 0xc0)\n  yield* range(0x2018, 0x2020)\n}\n\nexport class ASCII {\n  regl: any\n  luts!: Float32Array[]\n  renderer: Renderer\n  settings = new ASCIISettings\n  charMap = new Uint16Array(charCodes())\n\n  constructor(REGL: any, settings?: Partial<ASCIICoreSettings>) {\n    const canvas = element('canvas')()\n    const extensions = [ 'OES_texture_float' ]\n    this.regl = REGL({ canvas, extensions })\n    this.renderer = new Renderer(this)\n    this.update(settings)\n  }\n\n  private makeGlyph(charCode: number) {\n    const { fontFace, fontBlur, fontWidth, fontHeight, fontWidthPadded, fontHeightPadded } = this.settings\n    const glyph = context2d({ width: fontWidthPadded, height: fontHeightPadded })\n    const char = String.fromCharCode(charCode)\n\n    glyph.fillStyle = '#00f'\n    glyph.fillRect(0, 0, fontWidthPadded, fontHeightPadded)\n\n    glyph.fillStyle = '#000'\n    glyph.translate(fontWidthPadded/2, fontHeightPadded/2)\n    glyph.fillRect(-fontWidth/2, -fontHeight/2, fontWidth, fontHeight)\n\n    glyph.fillStyle = '#fff'\n    glyph.textAlign = 'center'\n    glyph.font = `${fontHeight}px ${fontFace}`\n    glyph.translate(0, fontHeight/4)\n\n    for (let i = 0; i < fontBlur;) {\n      glyph.filter = `blur(${1<<i}px)`\n      glyph.globalAlpha = ++i/fontBlur\n      glyph.fillText(char, 0, 0)\n    }\n\n    return glyph\n  }\n\n  private makeLut(charCode: number) {\n    const { lutWidth, lutHeight, lutPadding, lutWidthPadded, lutHeightPadded } = this.settings\n    const scaled = downscale(this.makeGlyph(charCode), lutWidthPadded, lutHeightPadded)\n    const bytes = scaled.getImageData(lutPadding, lutPadding, lutWidth, lutHeight).data\n    const floats = new Float32Array(bytes.length >> 2)\n\n    for (let i = 0; i < floats.length; i++)\n      floats[i] = bytes[i << 2] / 0xff\n\n    return floats\n  }\n\n  private makeLuts() {\n    const luts = Array.from(this.charMap, cc => this.makeLut(cc))\n    const brightest = luts.reduce((m, lut) => max(m, ...lut), 0)\n\n    for (const lut of luts)\n      for (let i = 0; i < lut.length; i++)\n        lut[i] = rgb(lut[i] / brightest)\n\n    return luts\n  }\n\n  private *map(bytes: Uint8Array, width: number, height: number) {\n    const { charMap } = this\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++)\n        yield charMap[bytes[x + y*width << 2]]\n      yield 0xa\n    }\n  }\n\n  update(settings?: Partial<ASCIICoreSettings>) {\n    overwrite(this.settings, settings!)\n    this.luts = this.makeLuts()\n    this.renderer.update()\n  }\n\n  render(renderable: Renderable, width: number, height: number) {\n    const width聞 = floor(width), height聞 = floor(height)\n    const bytes = this.renderer.render(renderable, width聞, height聞)\n    const chars = String.fromCharCode(...this.map(bytes, width聞, height聞))\n    return chars\n  }\n}\n"],"names":["frag"],"mappings":";;;;;;IAAO,MAAM,GAAG,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,OAAO,GAAG,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,GAAG,KAAK,IAAI,KAAK,KAAK,GAAG,CAAC;;ICAvF,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;;ICe1R,MAAM,KAAK,GAAG,WAAW,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,CAAC,EAAE;IACpD,IAAI,KAAK,IAAI,MAAM,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,EAAE,MAAM,IAAI,IAAI;IACvD,QAAQ,MAAM,MAAM,CAAC;IACrB,CAAC,CAAC;;IClBK,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AACpC,IAAO,MAAM,SAAS,GAAG,MAAM,CAAC;;ICAzB,MAAM,OAAO,GAAG,IAAI,IAAI,OAAO,IAAI,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;AAC3F,IAGO,MAAM,SAAS,GAAG,CAAC,OAAO,KAAK,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;;ICL3E,MAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,GAAG,KAAK,IAAI,QAAQ,CAAC,GAAG,EAAE,UAAU,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;AACxF,IAAO,MAAM,MAAM,GAAG,CAAC,IAAI,EAAE,GAAG,KAAK,QAAQ,CAAC,IAAI,EAAE,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;UCC1E,MAAM;QAGjB,YACmB,IAAS,EACT,KAAU;YADV,SAAI,GAAJ,IAAI,CAAK;YACT,UAAK,GAAL,KAAK,CAAK;SACzB;QAEJ,OAAO,CAAC,GAAQ;YACd,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;YAC5B,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,KAAK,CAAA;YAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBAClB,GAAG,KAAK;gBACR,GAAG,IAAI,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;gBACtC,GAAG,IAAI,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;aACvC,CAAC,CAAA;SACH;KACF;;;AChBD,UAAa,KAAM,SAAQ,MAAM;QAC/B,YAAY,IAAS;YACnB,KAAK,CAAC,IAAI,EAAE;gBACV,IAAI;gBACJ,KAAK,EAAE;oBACL,MAAM,EAAE,KAAK;iBACd;gBACD,UAAU,EAAE;oBACV,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACxC;gBACD,SAAS,EAAE,gBAAgB;gBAC3B,KAAK,EAAE,CAAC;aACT,CAAC,CAAA;SACH;KACF;;;ACdD,UAAa,KAAM,SAAQ,MAAM;QAC/B,YAAY,IAAS;YACnB,KAAK,CAAC,IAAI,EAAE;gBACV,IAAI;gBACJ,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC7B,QAAQ,EAAE;oBACR,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;oBACtB,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;oBACpC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;oBAC1B,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;oBAC1B,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;iBAC5B;aACF,CAAC,CAAA;SACH;KACF;;;ACdD,UAAa,KAAM,SAAQ,MAAM;QAC/B,YAAY,IAAS;YACnB,KAAK,CAAC,IAAI,EAAE;sBACVA,MAAI;gBACJ,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC7B,OAAO,EAAE;oBACP,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;oBACrB,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;iBACtB;gBACD,QAAQ,EAAE;oBACR,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;oBACzB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;oBACzB,QAAQ,EAAE,CAAC,EAAE,GAAG,EAAO,KAAK,CAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAE;oBACrD,QAAQ,EAAE,CAAC,EAAE,GAAG,EAAO,KAAK,CAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAE;iBACtD;aACF,CAAC,CAAA;SACH;KACF;;UCPY,QAAQ;QAenB,YAA6B,KAAY;YAAZ,UAAK,GAAL,KAAK,CAAO;YAJxB,YAAO,GAAG,SAAS,EAAE,CAAA;YACrB,WAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAA;YACrC,UAAK,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA;YAG/B,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAA;YAEtB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAA;YACzB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAA;YAEzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAA;YACzE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAAA;YAErD,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAA;YAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAA;YAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAA;SAC7B;QAEO,MAAM,CAAC,UAAsB,EAAE,KAAa,EAAE,MAAc;YAClE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,CAAA;YAElE,IAAI,OAAO,KAAK,KAAK;gBACnB,OAAO,UAAU,CAAA;YAEnB,IAAI,MAAM,CAAC,KAAK,KAAK,KAAK,IAAI,MAAM,CAAC,MAAM,KAAK,MAAM,EAAE;gBACtD,SAAS,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAA;gBACpC,OAAO,CAAC,qBAAqB,GAAG,OAAO,CAAA;aACxC;YAED,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;YAElD,OAAO,MAAM,CAAA;SACd;QAED,MAAM;YACJ,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;YAEtB,IAAI,CAAC,GAAG,CAAC;gBACP,MAAM,EAAE,OAAO;gBACf,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,KAAK,CAAC,IAAI;aACjB,CAAC,CAAA;YAEF,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;YACzB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;YACzB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;SAC1B;QAED,MAAM,CAAC,UAAsB,EAAE,KAAa,EAAE,MAAc;YAC1D,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,GAAG,IAAI,CAAA;YAChE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAA;YAE7C,MAAM,CAAC,GAAG,QAAQ,CAAC,QAAQ,GAAI,KAAK,CAAA;YACpC,MAAM,CAAC,GAAG,QAAQ,CAAC,SAAS,GAAG,MAAM,CAAA;YAErC,MAAM,MAAM,GAAG,KAAK,GAAG,MAAM,IAAI,CAAC,CAAA;YAClC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,MAAM;gBAC9B,IAAI,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,CAAA;YAErC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;YAElC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACjB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;YAC1B,IAAI,CAAC,IAAI,EAAE,CAAA;YAEX,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;gBACjB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAA;gBAChE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE;oBAChD,IAAI,CAAC,IAAI,EAAE,CAAA;oBACX,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;iBACtB,CAAC,CAAA;aACH,CAAC,CAAA;YAEF,OAAO,IAAI,CAAC,KAAK,CAAA;SAClB;KACF;;UCnGY,iBAAiB;QAA9B;YACE,cAAS,GAAI,IAAI,CAAA;YACjB,YAAO,GAAM,MAA+B,CAAA;YAC5C,aAAQ,GAAK,WAAW,CAAA;YACxB,cAAS,GAAI,EAAE,CAAA;YACf,eAAU,GAAG,EAAE,CAAA;YACf,aAAQ,GAAK,CAAC,CAAA;YACd,aAAQ,GAAK,CAAC,CAAA;YACd,cAAS,GAAI,CAAC,CAAA;YACd,eAAU,GAAG,CAAC,CAAA;YACd,eAAU,GAAG,CAAC,CAAA;YACd,UAAK,GAAQ,CAAC,CAAA;YACd,UAAK,GAAQ,CAAC,CAAA;SACf;KAAA;;UCVY,aAAc,SAAQ,iBAAiB;QAClD,IAAI,cAAc,KAAO,OAAO,IAAI,CAAC,UAAU,GAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAA,EAAE;QACnE,IAAI,eAAe,KAAM,OAAO,IAAI,CAAC,UAAU,GAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAA,EAAE;QACpE,IAAI,aAAa,KAAQ,OAAO,IAAI,CAAC,cAAc,GAAI,IAAI,CAAC,QAAQ,CAAA,EAAE;QACtE,IAAI,cAAc,KAAO,OAAO,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAA,EAAE;QACvE,IAAI,eAAe,KAAM,OAAO,KAAK,CAAC,IAAI,CAAC,aAAa,GAAI,IAAI,CAAC,SAAS,CAAC,CAAA,EAAE;QAC7E,IAAI,gBAAgB,KAAK,OAAO,KAAK,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,CAAA,EAAE;KAC/E;;ICND,MAAM,GAAG,GAAG,CAAC,CAAS,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;IAErD,MAAM,QAAQ,GAAG,CAAC,GAA6B,EAAE,KAAa,EAAE,MAAc;QAC5E,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAI,KAAK,GAAI,CAAC,CAAC,GAAG,KAAK,CAAA;QACnD,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,MAAM,CAAA;QAEpD,MAAM,GAAG,GAAG,SAAS,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAA;QAC9C,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;QACrC,KAAK,IAAI,CAAM,EAAE,CAAM,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;YAC1D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAA;QAE/D,MAAM,GAAG,GAAG,SAAS,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAA;QACxC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;QAC/B,OAAO,GAAG,CAAA;IACZ,CAAC,CAAA;IAED,MAAM,MAAM,GAAG,CAAC,GAA6B,EAAE,KAAa,EAAE,MAAc;QAC1E,MAAM,GAAG,GAAG,SAAS,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAA;QACxC,GAAG,CAAC,qBAAqB,GAAG,QAAQ,CAAA;QACpC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;QAC9C,OAAO,GAAG,CAAA;IACZ,CAAC,CAAA;AAED,IAAO,MAAM,SAAS,GACpB,uBAAuB,IAAI,wBAAwB,CAAC,SAAS;UACzD,MAAM;UACN,QAAQ,CAAA;;ICpBd,MAAM,SAAS,GAAG;QAChB,OAAO,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;QACxB,OAAO,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;QACxB,OAAO,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IAC9B,CAAC,CAAA;AAED,UAAa,KAAK;QAOhB,YAAY,IAAS,EAAE,QAAqC;YAH5D,aAAQ,GAAG,IAAI,aAAa,CAAA;YAC5B,YAAO,GAAG,IAAI,WAAW,CAAC,SAAS,EAAE,CAAC,CAAA;YAGpC,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAA;YAClC,MAAM,UAAU,GAAG,CAAE,mBAAmB,CAAE,CAAA;YAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAA;YACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAA;YAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;SACtB;QAEO,SAAS,CAAC,QAAgB;YAChC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,eAAe,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAA;YACtG,MAAM,KAAK,GAAG,SAAS,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,MAAM,EAAE,gBAAgB,EAAE,CAAC,CAAA;YAC7E,MAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAA;YAE1C,KAAK,CAAC,SAAS,GAAG,MAAM,CAAA;YACxB,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,eAAe,EAAE,gBAAgB,CAAC,CAAA;YAEvD,KAAK,CAAC,SAAS,GAAG,MAAM,CAAA;YACxB,KAAK,CAAC,SAAS,CAAC,eAAe,GAAC,CAAC,EAAE,gBAAgB,GAAC,CAAC,CAAC,CAAA;YACtD,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,GAAC,CAAC,EAAE,CAAC,UAAU,GAAC,CAAC,EAAE,SAAS,EAAE,UAAU,CAAC,CAAA;YAElE,KAAK,CAAC,SAAS,GAAG,MAAM,CAAA;YACxB,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAA;YAC1B,KAAK,CAAC,IAAI,GAAG,GAAG,UAAU,MAAM,QAAQ,EAAE,CAAA;YAC1C,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,GAAC,CAAC,CAAC,CAAA;YAEhC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,GAAG;gBAC7B,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAE,CAAC,KAAK,CAAA;gBAChC,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC,GAAC,QAAQ,CAAA;gBAChC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;aAC3B;YAED,OAAO,KAAK,CAAA;SACb;QAEO,OAAO,CAAC,QAAgB;YAC9B,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,cAAc,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAA;YAC1F,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,eAAe,CAAC,CAAA;YACnF,MAAM,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,IAAI,CAAA;YACnF,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,CAAA;YAElD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;gBACpC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAA;YAElC,OAAO,MAAM,CAAA;SACd;QAEO,QAAQ;YACd,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAA;YAC7D,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;YAE5D,KAAK,MAAM,GAAG,IAAI,IAAI;gBACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE;oBACjC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAA;YAEpC,OAAO,IAAI,CAAA;SACZ;QAEO,CAAC,GAAG,CAAC,KAAiB,EAAE,KAAa,EAAE,MAAc;YAC3D,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAA;YAExB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE;oBAC5B,MAAM,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAA;gBACxC,MAAM,GAAG,CAAA;aACV;SACF;QAED,MAAM,CAAC,QAAqC;YAC1C,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAS,CAAC,CAAA;YACnC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAA;YAC3B,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAA;SACvB;QAED,MAAM,CAAC,UAAsB,EAAE,KAAa,EAAE,MAAc;YAC1D,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,CAAA;YACpD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;YAC/D,MAAM,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,CAAA;YACtE,OAAO,KAAK,CAAA;SACb;KACF;;;;;;;;"}