((t,n)=>{"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((t=t||self).ascii={})})(this,(function(t){"use strict";const n=Object.assign,e=(...t)=>(...e)=>n(s("canvas")(...t).getContext("2d"),...e),s=t=>(...e)=>n(document.createElement(t),...e),i=String.fromCharCode,o=t=>t.charCodeAt(0),r=(t,n={},e="$")=>Function(`{${Object.keys(n)}}`,e,`return \`${t}\``)(n,n),a=t=>{const n=e()({font:`1em ${t}`}),s=n.measureText(" ");return t=>n.measureText(t).width===s.width},h=t=>{const[n,e]=[...t].map(o),s=[...Array(e-n).keys()].map(t=>n+t);return i(...s)},u=h(" ^")+h("`~"),c=u+h("¡§")+h("®±")+"©«¬´µ·»¿×÷",l=c+h("‘•")+"‹›∙√∞",f={__proto__:null,ascii:u,extended:c,extra:l},v=t=>t>.04045?((t+.055)/1.055)**2.4:t/12.92,{abs:d,clz32:m,floor:p,max:x,random:g,round:_}=Math,y=t=>1<<x(0,31-m(t)),b=(t,n,s)=>{const i=(t=>t instanceof CanvasRenderingContext2D?t.canvas:t)(t);let o=n*y(i.width/n-1),r=s*y(i.height/s-1);const a=e({width:o,height:r})();if(a.drawImage(i,0,0,o,r),n===o&&s===r)return a;for(let t,e;t=o>n,e=r>s,t||e;)a.drawImage(a.canvas,0,0,o,r,0,0,o>>=+t,r>>=+e);const h=e({width:n,height:s})();return h.drawImage(a.canvas,0,0),h};class w extends Float32Array{constructor(t,n){super(t*n),this.width=t,this.height=n}static fromCharCode(t,n){const{fontWidth:s,fontHeight:o,fontFamily:r,fontBlur:a,fontGamma:h}=n,{fontBase:u,lutWidth:c,lutHeight:l,lutPadding:f,lutGamma:d}=n,m=2*f+c,p=2*f+l,x=_(m/c*s),g=_(p/l*o),y=e({width:x,height:g})(),$=i(t);y.fillStyle="#00f",y.fillRect(0,0,x,g),y.translate(x/2,g/2),y.fillStyle="#000",y.fillRect(-s/2,-o/2,s,o),y.translate(0,o*(.5-u)),y.fillStyle="#fff",y.textAlign="center",y.font=`${o}px ${r}`;for(let t=0,n=1,e=1;a>t;[n,e]=[e,e+n])y.filter=`blur(${e}px)`,y.globalAlpha=(++t/a)**h,y.fillText($,0,0);const M=new w(c,l),F=b(y,m,p).getImageData(f,f,c,l).data;for(let t=0;M.length>t;t++)M[t]=v(F[t<<2]/255)**d;return M}static combine(t){const n=t[0].length,e=t.length,s=new w(n,e);for(let i=0;e>i;i++)s.set(t[i],i*n);return s}normalize(t,n){for(let e=0;this.length>e;e++)this[e]=(this[e]-t)/(n-t)}compare(t){let n=0;for(let e=this.length;e--;)n+=d(this[e]-t[e]);return n}}class ${constructor(){this.charSet=u,this.fontFamily="monospace",this.fontBase=.25,this.fontWidth=40,this.fontHeight=70,this.fontBlur=9,this.fontGamma=1,this.lutWidth=5,this.lutHeight=7,this.lutPadding=1,this.lutMin=0,this.lutMax=1,this.lutGamma=1,this.brightness=1,this.gamma=1,this.noise=0}}class M{constructor(t){this.settings=new $,n(this.settings,t),this.t=this.s(),this.i=this.o()}s(){const{charSet:t,fontFamily:n}=this.settings,e=[...t].filter(a(n)).map(o);return Int32Array.from(e)}o(){const{t,settings:n}=this,{lutMin:e,lutMax:s}=n,i=Array.from(t,t=>w.fromCharCode(t,n)),o=i.reduce((t,n)=>x(t,...n),0);for(const t of i)t.normalize(e*o,s*o);return i}render(t,n,e){return[...this.lines(t,p(n),p(e))].join("\n")}}const F=5,P=5121,C=5126,S=6408,U=35632,A=35633,R=3553,G=33984,L=36160,B=36064,z=6403,E=33326,T=(t,...n)=>{const e=s("canvas")().getContext("webgl2",t);if(!e)throw Error("WebGL2 is not available");for(const t of n)if(!e.getExtension(t))throw Error(`"${t}" extension is not available`);return e},X=(t,n,e)=>{const s=`#version 300 es\n${e}`,i=t.createShader(n);if(t.shaderSource(i,s),t.compileShader(i),!t.getShaderParameter(i,35713))throw Error(`Shader error:\n${t.getShaderInfoLog(i)}\n${N(s)}\n`);return i},j=(t,n,e)=>{const s=t.createProgram();if(t.attachShader(s,n),t.attachShader(s,e),t.linkProgram(s),!t.getProgramParameter(s,35714))throw Error(`Program error: ${t.getProgramInfoLog(s)}`);return s},D=(t,n=34962)=>{const e=t.createBuffer();return V(t,e,e=>t.bindBuffer(n,e))},O=(t,n=R)=>{const e=t.createTexture();return V(t,e,e=>t.bindTexture(n,e))},W=(t,n=L)=>{const e=t.createFramebuffer();return V(t,e,e=>t.bindFramebuffer(n,e))},H=(t,n)=>e=>t.getUniformLocation(n,e),N=(t,n=1)=>t.replace(/^/gm,()=>`${n++}: `.padStart(5,"0")),V=(t,n,e)=>s=>(s&&(e(n),s(t,n),e(null)),n),Y={base:"in vec2 aPosition;\nout vec2 vPosition;\nvoid main() {\nvPosition = 0.5 + 0.5*aPosition;\ngl_Position = vec4(aPosition, 0., 1.);\n}\n"},k={pass1:"#define MAP3(f, v) vec3(f(v.x), f(v.y), f(v.z))\n#define RGB(x) mix(x/12.92, pow((x+.055)/1.055, 2.4), step(.04045, x))\n#define LUM(x) dot(x, vec3(.2126, .7152, .0722))\nprecision mediump float;\nuniform sampler2D uSrc;\nuniform float uBrightness;\nuniform float uGamma;\nuniform float uNoise;\nuniform float uRandom;\nin vec2 vPosition;\nout vec4 vFragColor;\nfloat hash13(vec3 p3) {\np3 = fract(p3 * 0.1031);\np3 += dot(p3, p3.yzx + 19.19);\nreturn fract((p3.x + p3.y) * p3.z);\n}\nvoid main() {\nvec3 srgb = texture(uSrc, vPosition).rgb;\nfloat signal = uBrightness * pow(LUM(MAP3(RGB, srgb)), uGamma);\nfloat noise = uNoise * (hash13(vec3(gl_FragCoord.xy, 1000.*uRandom)) - 0.5);\nvFragColor = vec4(vec3(clamp(signal + noise, 0., 1.)), 0.);\n}\n",pass2:"#define U ${ width }\n#define V ${ height }\n#define X ${ width * height }\n#define Y ${ chars }\nprecision mediump float;\nuniform sampler2D uSrc;\nuniform sampler2D uLUT;\nuniform int uCharMap[Y];\nin vec2 vPosition;\nout vec4 vFragColor;\nstruct Result {\nint index;\nfloat value;\n};\nvoid main() {\nResult res = Result(0, float(X));\nivec2 pos = ivec2(vec2(textureSize(uSrc, 0))*vPosition) - ivec2(U, V)/2;\nfloat src[X];\nfor (int v = 0; v < V; v++)\nfor (int u = 0; u < U; u++)\nsrc[u + v*U] = texelFetch(uSrc, pos + ivec2(u, v), 0).r;\nfor (int y = 0; y < Y; y++) {\nfloat value = 0.;\nfor (int x = 0; x < X; x++)\nvalue += abs(src[x] - texelFetch(uLUT, ivec2(x, y), 0).r);\nif (res.value > value)\nres = Result(y, value);\n}\nvFragColor = vec4(uCharMap[res.index], 0, 0, 0);\n}\n"},I=t=>{t.texParameteri(R,10241,9728),t.texParameteri(R,10240,9728)},q=t=>n=>{const e=Float32Array.of(1,1,-1,1,1,-1,-1,-1);n.bufferData(34962,e,35044),n.vertexAttribPointer(t,2,C,!1,0,0),n.enableVertexAttribArray(t)};t.CPURenderer=class extends M{*lines(t,n,e){const{settings:s,t:o,i:r}=this,{lutWidth:a,lutHeight:h,brightness:u,gamma:c,noise:l}=s,f=a*n,d=h*e,m=b(t,f,d).getImageData(0,0,f,d).data,p=new Float32Array(a*h);for(let t=0;d>t;t+=h){const n=[];for(let e=0;f>e;e+=a){let s=0,i=1/0;for(let n=0;h>n;n++)for(let i=0;a>i;i++){let o=e+i+(t+n)*f<<2;const r=u*(.2126*v(m[o++]/255)+.7152*v(m[o++]/255)+.0722*v(m[o++]/255))**c,a=l*(g()-.5);p[s++]=r+a}for(let t=r.length;t--;){const n=r[t].compare(p);i>n&&(i=n,s=t)}n.push(o[s])}yield i(...n)}}},t.GPURenderer=class extends M{constructor(t){super(t),this.h=T({},"EXT_color_buffer_float"),this.u=W(this.h)(),this.l=O(this.h)(I),this.v=O(this.h)(I),this.m=O(this.h)(I),this.p=w.combine(this.i),this.g=new Float32Array;const n=X(this.h,A,Y.base),e=X(this.h,U,k.pass1),s=X(this.h,U,r(k.pass2,{chars:this.t.length,width:this.settings.lutWidth,height:this.settings.lutHeight}));this._=j(this.h,n,e),this.$=j(this.h,n,s),D(this.h)(q(0))}*lines(t,n,e){const{settings:s,t:o,p:r,h:a,_:h,$:u,u:c,l,v:f,m:v}=this,d=s.lutWidth*n,m=s.lutHeight*e,p=b(t,d,m),x=H(a,h),g=H(a,u);this.g.length!==n*e&&(this.g=new Float32Array(n*e)),a.bindFramebuffer(L,c),a.activeTexture(G+2),a.bindTexture(R,l),a.texImage2D(R,0,E,r.width,r.height,0,z,C,r),a.activeTexture(G+1),a.bindTexture(R,f),a.texImage2D(R,0,S,S,P,p.canvas),a.activeTexture(G+0),a.bindTexture(R,v),a.texImage2D(R,0,E,d,m,0,z,C,null),a.framebufferTexture2D(L,B,R,v,0),a.useProgram(h),a.uniform1i(x("uSrc"),1),a.uniform1f(x("uBrightness"),s.brightness),a.uniform1f(x("uGamma"),s.gamma),a.uniform1f(x("uNoise"),s.noise),a.uniform1f(x("uRandom"),Math.random()),a.viewport(0,0,d,m),a.drawArrays(F,0,4),a.activeTexture(G+1),a.bindTexture(R,v),a.activeTexture(G+0),a.bindTexture(R,f),a.texImage2D(R,0,E,d,m,0,z,C,null),a.framebufferTexture2D(L,B,R,f,0),a.useProgram(u),a.uniform1i(g("uSrc"),1),a.uniform1i(g("uLUT"),2),a.uniform1iv(g("uCharMap"),o),a.viewport(0,0,n,e),a.drawArrays(F,0,4),a.readPixels(0,0,n,e,z,C,this.g),a.bindFramebuffer(L,null);for(let t=0;this.g.length>t;)yield i(...this.g.subarray(t,t+=n))}},t.LUT=w,t.Renderer=M,t.Settings=$,t.charSets=f,Object.defineProperty(t,"M",{value:!0})}));
//# sourceMappingURL=bundle.umd.min.js.map
