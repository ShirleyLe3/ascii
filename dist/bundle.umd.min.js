((t,n)=>{"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((t=t||self).ascii={})})(this,(function(t){"use strict";const n=Object.assign,e=(...t)=>(...e)=>n(s("canvas")(...t).getContext("2d"),...e),s=t=>(...e)=>n(document.createElement(t),...e),i=String.fromCharCode,r=t=>t.charCodeAt(0),o=(t,n={},e="$")=>Function(`{${Object.keys(n)}}`,e,`return \`${t}\``)(n,n),a=t=>{const n=e()({font:`1em ${t}`}),s=n.measureText(" ");return t=>n.measureText(t).width===s.width},h=t=>{const[n,e]=[...t].map(r),s=[...Array(e-n).keys()].map(t=>n+t);return i(...s,e)},u=h(" ^")+h("`~"),c=u+h("¡§")+"®°±©«¬´µ·»¿×÷",l=c+h("‘•")+"‹›∙√∞",f={__proto__:null,ascii:u,extended:c,extra:l},d=t=>t>.04045?((t+.055)/1.055)**2.4:t/12.92,{abs:v,clz32:m,floor:p,max:g,random:x,round:_}=Math,y=t=>t instanceof CanvasRenderingContext2D?t.canvas:t,w=t=>{if(t instanceof CanvasRenderingContext2D)return t;const{width:n,height:s}=t,i=e({width:n,height:s})();return i.drawImage(t,0,0),i},b=t=>1<<g(0,31-m(t)),$=(t,n,s)=>{const i=y(t);let r=n*b(i.width/n-1),o=s*b(i.height/s-1);const a=((t,n,s)=>{const i=e({width:n,height:s})();return i.drawImage(y(t),0,0,n,s),i})(t,r,o);if(n===r&&s===o)return a;for(let t,e;t=r>n,e=o>s,t||e;)a.drawImage(a.canvas,0,0,r,o,0,0,r>>=+t,o>>=+e);return((t,n,s,i,r)=>{const o=e({width:i,height:r})();return o.drawImage(y(t),n,s,i,r,0,0,i,r),o})(a,0,0,n,s)},M=(t,n,e)=>{const{width:s,height:i}=y(t);return n!==s||e!==i?$(t,n,e):t};class C extends Float32Array{constructor(t,n){super(t*n),this.width=t,this.height=n}static fromCharCode(t,n){const{fontWidth:s,fontHeight:r,fontFamily:o,fontBlur:a,fontGamma:h}=n,{fontBase:u,lutWidth:c,lutHeight:l,lutPadding:f,lutGamma:v}=n,m=2*f+c,p=2*f+l,g=_(m/c*s),x=_(p/l*r),y=e({width:g,height:x})(),w=i(t);y.fillStyle="#00f",y.fillRect(0,0,g,x),y.translate(g/2,x/2),y.fillStyle="#000",y.fillRect(-s/2,-r/2,s,r),y.translate(0,r*(.5-u)),y.fillStyle="#fff",y.textAlign="center",y.font=`${r}px ${o}`;for(let t=0,n=1,e=1;a>t;[n,e]=[e,e+n])y.filter=`blur(${e}px)`,y.globalAlpha=(++t/a)**h,y.fillText(w,0,0);const b=new C(c,l),M=$(y,m,p).getImageData(f,f,c,l).data;for(let t=0;b.length>t;t++)b[t]=d(M[t<<2]/255)**v;return b}static combine(t){const n=t[0].length,e=t.length,s=new C(n,e);for(let i=0;e>i;i++)s.set(t[i],i*n);return s}normalize(t,n){for(let e=0;this.length>e;e++)this[e]=(this[e]-t)/(n-t)}compare(t){let n=0;for(let e=this.length;e--;)n+=v(this[e]-t[e]);return n}}class F{constructor(){this.charSet=u,this.fontFamily="monospace",this.fontBase=.25,this.fontWidth=40,this.fontHeight=70,this.fontBlur=9,this.fontGamma=1,this.lutWidth=5,this.lutHeight=7,this.lutPadding=1,this.lutMin=0,this.lutMax=1,this.lutGamma=1,this.brightness=1,this.gamma=1,this.noise=0}}class P{constructor(t){this.settings=new F,n(this.settings,t),this.t=this.s(),this.i=this.o()}s(){const{charSet:t,fontFamily:n}=this.settings,e=[...t].filter(a(n)).map(r);return Int32Array.from(e)}o(){const{t,settings:n}=this,{lutMin:e,lutMax:s}=n,i=Array.from(t,t=>C.fromCharCode(t,n)),r=i.reduce((t,n)=>g(t,...n),0);for(const t of i)t.normalize(e*r,s*r);return i}render(t,n,e){return[...this.lines(t,p(n),p(e))].join("\n")}}const R=5,S=5121,U=5126,A=6408,G=35632,L=35633,B=3553,z=33984,E=36160,T=36064,D=6403,X=33326,j=(t,...n)=>{const e=s("canvas")().getContext("webgl2",t);if(!e)throw Error("WebGL2 is not available");for(const t of n)if(!e.getExtension(t))throw Error(`"${t}" extension is not available`);return e},O=(t,n,e)=>{const s=`#version 300 es\n${e}`,i=t.createShader(n);if(t.shaderSource(i,s),t.compileShader(i),!t.getShaderParameter(i,35713))throw Error(`Shader error:\n${t.getShaderInfoLog(i)}\n${k(s)}\n`);return i},W=(t,n,e)=>{const s=t.createProgram();if(t.attachShader(s,n),t.attachShader(s,e),t.linkProgram(s),!t.getProgramParameter(s,35714))throw Error(`Program error: ${t.getProgramInfoLog(s)}`);return s},H=(t,n=34962)=>{const e=t.createBuffer();return I(t,e,e=>t.bindBuffer(n,e))},N=(t,n=B)=>{const e=t.createTexture();return I(t,e,e=>t.bindTexture(n,e))},V=(t,n=E)=>{const e=t.createFramebuffer();return I(t,e,e=>t.bindFramebuffer(n,e))},Y=(t,n)=>e=>t.getUniformLocation(n,e),k=(t,n=1)=>t.replace(/^/gm,()=>`${n++}: `.padStart(5,"0")),I=(t,n,e)=>s=>(s&&(e(n),s(t,n),e(null)),n),q={base:"in vec2 aPosition;\nout vec2 vPosition;\nvoid main() {\nvPosition = 0.5 + 0.5*aPosition;\ngl_Position = vec4(aPosition, 0., 1.);\n}\n"},J={pass1:"#define MAP3(f, v) vec3(f(v.x), f(v.y), f(v.z))\n#define RGB(x) mix(x/12.92, pow((x+.055)/1.055, 2.4), step(.04045, x))\n#define LUM(x) dot(x, vec3(.2126, .7152, .0722))\nprecision mediump float;\nuniform sampler2D uSrc;\nuniform float uBrightness;\nuniform float uGamma;\nuniform float uNoise;\nuniform float uRandom;\nin vec2 vPosition;\nout vec4 vFragColor;\nfloat hash13(vec3 p3) {\np3 = fract(p3 * 0.1031);\np3 += dot(p3, p3.yzx + 19.19);\nreturn fract((p3.x + p3.y) * p3.z);\n}\nvoid main() {\nvec3 srgb = texture(uSrc, vPosition).rgb;\nfloat signal = uBrightness * pow(LUM(MAP3(RGB, srgb)), uGamma);\nfloat noise = uNoise * (hash13(vec3(gl_FragCoord.xy, 1000.*uRandom)) - 0.5);\nvFragColor = vec4(vec3(clamp(signal + noise, 0., 1.)), 0.);\n}\n",pass2:"#define U ${ width }\n#define V ${ height }\n#define X ${ width * height }\n#define Y ${ chars }\nprecision mediump float;\nuniform sampler2D uSrc;\nuniform sampler2D uLUT;\nuniform int uCharMap[Y];\nin vec2 vPosition;\nout vec4 vFragColor;\nstruct Result {\nint index;\nfloat value;\n};\nvoid main() {\nResult res = Result(0, float(X));\nivec2 pos = ivec2(vec2(textureSize(uSrc, 0))*vPosition) - ivec2(U, V)/2;\nfloat src[X];\nfor (int v = 0; v < V; v++)\nfor (int u = 0; u < U; u++)\nsrc[u + v*U] = texelFetch(uSrc, pos + ivec2(u, v), 0).r;\nfor (int y = 0; y < Y; y++) {\nfloat value = 0.;\nfor (int x = 0; x < X; x++)\nvalue += abs(src[x] - texelFetch(uLUT, ivec2(x, y), 0).r);\nif (res.value > value)\nres = Result(y, value);\n}\nvFragColor = vec4(uCharMap[res.index], 0, 0, 0);\n}\n"},K=t=>{t.texParameteri(B,10241,9728),t.texParameteri(B,10240,9728)},Q=t=>n=>{const e=Float32Array.of(1,1,-1,1,1,-1,-1,-1);n.bufferData(34962,e,35044),n.vertexAttribPointer(t,2,U,!1,0,0),n.enableVertexAttribArray(t)};t.CPURenderer=class extends P{*lines(t,n,e){const{settings:s,t:r,i:o}=this,{lutWidth:a,lutHeight:h,brightness:u,gamma:c,noise:l}=s,f=a*n,v=h*e,m=w(M(t,f,v)).getImageData(0,0,f,v).data,p=new Float32Array(a*h);for(let t=0;v>t;t+=h){const n=[];for(let e=0;f>e;e+=a){let s=0,i=1/0;for(let n=0;h>n;n++)for(let i=0;a>i;i++){let r=e+i+(t+n)*f<<2;const o=u*(.2126*d(m[r++]/255)+.7152*d(m[r++]/255)+.0722*d(m[r++]/255))**c,a=l*(x()-.5);p[s++]=o+a}for(let t=o.length;t--;){const n=o[t].compare(p);i>n&&(i=n,s=t)}n.push(r[s])}yield i(...n)}}},t.GPURenderer=class extends P{constructor(t){super(t),this.h=j({},"EXT_color_buffer_float"),this.u=V(this.h)(),this.l=N(this.h)(K),this.v=N(this.h)(K),this.m=N(this.h)(K),this.p=C.combine(this.i),this.g=new Float32Array;const n=O(this.h,L,q.base),e=O(this.h,G,J.pass1),s=O(this.h,G,o(J.pass2,{chars:this.t.length,width:this.settings.lutWidth,height:this.settings.lutHeight}));this._=W(this.h,n,e),this.$=W(this.h,n,s),H(this.h)(Q(0))}*lines(t,n,e){const{settings:s,t:r,p:o,h:a,_:h,$:u,u:c,l,v:f,m:d}=this,v=s.lutWidth*n,m=s.lutHeight*e,p=y(M(t,v,m)),g=Y(a,h),x=Y(a,u);this.g.length!==n*e&&(this.g=new Float32Array(n*e)),a.bindFramebuffer(E,c),a.activeTexture(z+2),a.bindTexture(B,l),a.texImage2D(B,0,X,o.width,o.height,0,D,U,o),a.activeTexture(z+1),a.bindTexture(B,f),a.texImage2D(B,0,A,A,S,p),a.activeTexture(z+0),a.bindTexture(B,d),a.texImage2D(B,0,X,v,m,0,D,U,null),a.framebufferTexture2D(E,T,B,d,0),a.useProgram(h),a.uniform1i(g("uSrc"),1),a.uniform1f(g("uBrightness"),s.brightness),a.uniform1f(g("uGamma"),s.gamma),a.uniform1f(g("uNoise"),s.noise),a.uniform1f(g("uRandom"),Math.random()),a.viewport(0,0,v,m),a.drawArrays(R,0,4),a.activeTexture(z+1),a.bindTexture(B,d),a.activeTexture(z+0),a.bindTexture(B,f),a.texImage2D(B,0,X,v,m,0,D,U,null),a.framebufferTexture2D(E,T,B,f,0),a.useProgram(u),a.uniform1i(x("uSrc"),1),a.uniform1i(x("uLUT"),2),a.uniform1iv(x("uCharMap"),r),a.viewport(0,0,n,e),a.drawArrays(R,0,4),a.readPixels(0,0,n,e,D,U,this.g),a.bindFramebuffer(E,null);for(let t=0;this.g.length>t;)yield i(...this.g.subarray(t,t+=n))}},t.LUT=C,t.Renderer=P,t.Settings=F,t.charSets=f,Object.defineProperty(t,"M",{value:!0})}));
//# sourceMappingURL=bundle.umd.min.js.map
