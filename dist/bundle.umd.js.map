{"version":3,"file":"bundle.umd.js","sources":["../node_modules/it/dist/esm/uncurried/range.js","../node_modules/wheels/esm/object/index.js","../node_modules/wheels/esm/dom/index.js","../src/utils.ts","../src/charsets.ts","../node_modules/wheels/esm/color/srgb.js","../node_modules/wheels/esm/math/native.js","../src/canvas.ts","../src/classes/LUT.ts","../src/classes/Settings.ts","../src/classes/Renderer.ts","../src/classes/CPURenderer.ts","../node_modules/wheels/esm/text/template.js","../src/gl/enums/webgl1.ts","../src/gl/enums/webgl2.ts","../src/gl/utils.ts","../src/classes/GPURenderer.ts"],"sourcesContent":["/**\n * @example\n * range() // (0, 1, 2, 3, 4, …)\n * range(0, 5) // (0, 1, 2, 3, 4)\n * range(1, 10, 2) // (1, 3, 5, 7, 9)\n */\nexport function* range(start = 0, stop = Infinity, step = 1) {\n    for (let n = start; n < stop; n += step)\n        yield n;\n}\n","export const extend = Object.assign;\nexport const overwrite = extend;\nexport const copy = (object) => overwrite({}, object);\nexport const get = (object, path, sep = '.') => path.split(sep).reduce((o, next) => o && o[next], object);\nexport const proto = (object) => {\n    const props = new Set();\n    for (let o = object; o && o !== Object.prototype; o = Object.getPrototypeOf(o))\n        Object.getOwnPropertyNames(o).forEach(prop => props.add(prop));\n    return props;\n};\nexport * from './deep-copy';\n","import { overwrite } from '../object';\nexport const context2d = (...attributes) => (...settings) => overwrite(element('canvas')(...attributes).getContext('2d'), ...settings);\nexport const element = (name) => (...attributes) => overwrite(document.createElement(name), ...attributes);\nexport const append = (parent) => (...children) => children.forEach(child => parent.appendChild(child));\nexport const prevent = (fn) => (event) => { event.preventDefault(); fn && fn(event); };\nexport const raf = () => new Promise(resolve => requestAnimationFrame(resolve));\n","import { context2d } from 'wheels/esm/dom'\n\nexport const str = String.fromCharCode\nexport const chr = (str: string) => str.charCodeAt(0)\n\n// chars.filter(monospaced(font))\nexport const monospaced = (font: string) => {\n  const api = context2d()({ font: `1em ${font}` })\n  const ref = api.measureText(' ')\n  return (char: string) => api.measureText(char).width === ref.width\n}\n","import { range } from 'it/dist/esm/uncurried'\nimport { str } from './utils'\n\nexport const unicode = str(\n  // ascii\n  ...range(0x20, 0x5f), // _!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^\n  ...range(0x60, 0x7f), // `abcdefghijklmnopqrstuvwxyz{|}~\n\n  // extended ascii\n  ...range(0xa1, 0xa8), // ¡¢£¤¥¦§\n  ...range(0xae, 0xb2), // ®¯°±\n  0xa9, 0xab, 0xac, 0xb4, 0xb5, 0xb7, 0xbb, 0xbf, 0xd7, 0xf7, // ©«¬´µ·»¿×÷\n\n  // unicode\n  ...range(0x2018, 0x2023), // ‘’‚‛“”„‟†‡•\n  0x2039, 0x203a, 0x2219, 0x221a, 0x221e // ‹›∙√∞\n)\n\nexport const extended = unicode.replace(/[^\\x00-\\xff]/g, '')\nexport const ascii    = unicode.replace(/[^\\x00-\\x7f]/g, '')\n","export const rgb = (srgb) => srgb <= 0.04045 ? srgb / 12.92 : ((srgb + 0.055) / 1.055) ** 2.4;\nexport const srgb = (rgb) => rgb <= 0.0031308 ? rgb * 12.92 : (rgb ** (1 / 2.4)) * 1.055 - 0.055;\n","export const { abs, acos, acosh, asin, asinh, atan, atan2, atanh, cbrt, ceil, clz32, cos, cosh, exp, expm1, floor, fround, hypot, imul, log, log10, log1p, log2, max, min, pow, random, round, sign, sin, sinh, sqrt, tan, tanh, trunc, E, LN10, LN2, LOG10E, LOG2E, PI, SQRT1_2, SQRT2 } = Math;\nexport const { isFinite, isInteger, isNaN, isSafeInteger, parseFloat, parseInt, EPSILON, MAX_SAFE_INTEGER, MAX_VALUE, MIN_SAFE_INTEGER, MIN_VALUE, NEGATIVE_INFINITY, POSITIVE_INFINITY } = Number;\n","import { context2d } from 'wheels/esm/dom'\nimport { clz32, max } from 'wheels/esm/math'\n\n// most significant bit (but msb(x) is always >=1)\nconst msb = (n: number) => 1 << max(0, 31 - clz32(n))\n\nexport type Source =\n  CanvasRenderingContext2D |\n  HTMLCanvasElement |\n  HTMLImageElement |\n  HTMLVideoElement |\n  ImageBitmap\n\nexport const extract = (src: Source) =>\n  src instanceof CanvasRenderingContext2D\n    ? src.canvas\n    : src\n\nexport const resize = (src: Source, w: number, h: number) => {\n  const srcʹ = extract(src)\n  let wʹ = w * msb(srcʹ.width  / w - 1)\n  let hʹ = h * msb(srcʹ.height / h - 1)\n\n  const tmp = context2d({ width: wʹ, height: hʹ })()\n  tmp.drawImage(srcʹ, 0, 0, wʹ, hʹ)\n\n  if (w === wʹ && h === hʹ)\n    return tmp\n\n  for (let x, y; x = wʹ > w, y = hʹ > h, x || y;)\n    tmp.drawImage(tmp.canvas, 0, 0, wʹ, hʹ, 0, 0, wʹ >>= +x, hʹ >>= +y)\n\n  const dst = context2d({ width: w, height: h })()\n  dst.drawImage(tmp.canvas, 0, 0)\n  return dst\n}\n","import { rgb } from 'wheels/esm/color/srgb'\nimport { context2d } from 'wheels/esm/dom'\nimport { abs, round } from 'wheels/esm/math'\nimport { resize } from '../canvas'\nimport { str } from '../utils'\nimport { Settings } from './Settings'\n\nconst enum Color {\n  outline    = '#00f',\n  background = '#000',\n  foreground = '#fff'\n}\n\nexport const fromCharCode = (charCode: number, settings: Settings) => {\n  const { fontWidth, fontHeight, fontFamily, fontBlur, fontGamma } = settings\n  const { fontBase, lutWidth, lutHeight, lutPadding, lutGamma } = settings\n\n  const lutWidthʹ   = lutPadding*2 + lutWidth\n  const lutHeightʹ  = lutPadding*2 + lutHeight\n\n  const fontWidthʹ  = round(lutWidthʹ  / lutWidth  * fontWidth)\n  const fontHeightʹ = round(lutHeightʹ / lutHeight * fontHeight)\n\n  const api = context2d({ width: fontWidthʹ, height: fontHeightʹ })()\n  const char = str(charCode)\n\n  api.fillStyle = Color.outline\n  api.fillRect(0, 0, fontWidthʹ, fontHeightʹ)\n\n  api.translate(fontWidthʹ/2, fontHeightʹ/2)\n  api.fillStyle = Color.background\n  api.fillRect(-fontWidth/2, -fontHeight/2, fontWidth, fontHeight)\n\n  api.translate(0, fontHeight*(0.5 - fontBase))\n  api.fillStyle = Color.foreground\n  api.textAlign = 'center'\n  api.font = `${fontHeight}px ${fontFamily}`\n\n  for (let i = 0, m = 1, n = 1; i < fontBlur; [m, n] = [n, n + m]) {\n    api.filter = `blur(${n}px)`\n    api.globalAlpha = (++i / fontBlur)**fontGamma\n    api.fillText(char, 0, 0)\n  }\n\n  const lut = new LUT(lutWidth, lutHeight)\n  const rgba = resize(api, lutWidthʹ, lutHeightʹ)\n    .getImageData(lutPadding, lutPadding, lutWidth, lutHeight)\n    .data\n\n  for (let i = 0; i < lut.length; i++)\n    lut[i] = rgb(rgba[i << 2] / 0xff)**lutGamma\n\n  return lut\n}\n\nexport const combine = (...luts: LUT[]) => {\n  const width = luts[0].length\n  const height = luts.length\n  const lut = new LUT(width, height)\n\n  for (let i = 0; i < height; i++)\n    lut.set(luts[i], i*width)\n\n  return lut\n}\n\nexport class LUT extends Float32Array {\n  constructor(public width: number, public height: number) {\n    super(width * height)\n  }\n\n  normalize(min: number, max: number) {\n    for (let i = 0; i < this.length; i++)\n      this[i] = (this[i] - min) / (max - min)\n  }\n\n  compare(other: ArrayLike<number>) {\n    let acc = 0\n\n    for (let i = this.length; i--;)\n      acc += abs(this[i] - other[i])\n\n    return acc\n  }\n}\n","import { ascii } from '../charsets'\n\nexport class Settings {\n  charSet    = ascii\n\n  fontFamily = 'monospace'\n  fontBase   = 0.25\n  fontWidth  = 40\n  fontHeight = 70\n  fontBlur   = 9\n  fontGamma  = 1.0\n\n  lutWidth   = 5\n  lutHeight  = 7\n  lutPadding = 1\n  lutMin     = 0.0\n  lutMax     = 1.0\n  lutGamma   = 1.0\n\n  brightness = 1.0\n  gamma      = 1.0\n  noise      = 0.0\n}\n","import { context2d } from 'wheels/esm/dom'\nimport { floor, max } from 'wheels/esm/math'\nimport { overwrite } from 'wheels/esm/object'\nimport { Source } from '../canvas'\nimport { chr, monospaced } from '../utils'\nimport { fromCharCode, LUT } from './LUT'\nimport { Settings } from './Settings'\n\nexport abstract class Renderer {\n  protected readonly api: CanvasRenderingContext2D\n  protected readonly charMap: Uint16Array\n  protected readonly luts: LUT[]\n\n  readonly settings = new Settings\n\n  constructor(settings?: Partial<Settings>) {\n    overwrite(this.settings, settings!)\n\n    this.api = context2d()()\n    this.charMap = this.makeCharMap()\n    this.luts = this.makeLUTs()\n  }\n\n  private makeCharMap() {\n    const { charSet, fontFamily } = this.settings\n\n    const charCodes = [...charSet]\n      .filter(monospaced(fontFamily))\n      .map(chr)\n\n    return Uint16Array.from(charCodes)\n  }\n\n  private makeLUTs() {\n    const { charMap, settings } = this\n    const { lutMin, lutMax } = settings\n\n    const luts = Array.from(charMap, cc => fromCharCode(cc, settings))\n    const maxʹ = luts.reduce((acc, lut) => max(acc, ...lut), 0)\n\n    for (const lut of luts)\n      lut.normalize(lutMin * maxʹ, lutMax * maxʹ)\n\n    return luts\n  }\n\n  render(src: Source, width: number, height: number) {\n    return [...this.lines(src, floor(width), floor(height))].join('\\n')\n  }\n\n  abstract lines(src: Source, width: number, height: number): IterableIterator<string>\n}\n","import { rgb } from 'wheels/esm/color/srgb'\nimport { random } from 'wheels/esm/math'\nimport { resize, Source } from '../canvas'\nimport { str } from '../utils'\nimport { Renderer } from './Renderer'\n\n// https://en.wikipedia.org/wiki/SRGB\nconst enum Y {\n  r = 0.2126,\n  g = 0.7152,\n  b = 0.0722\n}\n\nexport class CPURenderer extends Renderer {\n  *lines(src: Source, width: number, height: number) {\n    const { settings, charMap, luts } = this\n    const { lutWidth, lutHeight, brightness, gamma, noise } = settings\n\n    const srcWidth  = lutWidth  * width\n    const srcHeight = lutHeight * height\n    const srcʹ = resize(src, srcWidth, srcHeight)\n\n    const rgba = srcʹ.getImageData(0, 0, srcWidth, srcHeight).data\n    const buffer = new Float32Array(lutWidth * lutHeight)\n\n    for (let y = 0; y < srcHeight; y += lutHeight) {\n      const codes = []\n\n      for (let x = 0; x < srcWidth; x += lutWidth) {\n        let index = 0\n        let value = Infinity\n\n        for (let v = 0; v < lutHeight; v++) {\n          for (let u = 0; u < lutWidth; u++) {\n            let i = (x+u) + (y+v)*srcWidth << 2\n\n            const r = Y.r * rgb(rgba[i++] / 0xff)\n            const g = Y.g * rgb(rgba[i++] / 0xff)\n            const b = Y.b * rgb(rgba[i++] / 0xff)\n\n            const s = brightness * (r + g + b)**gamma\n            const n = noise * (random() - 0.5)\n\n            buffer[index++] = s + n // signal + noise\n          }\n        }\n\n        for (let i = luts.length; i--;) {\n          const delta = luts[i].compare(buffer)\n\n          if (delta < value) {\n            value = delta\n            index = i\n          }\n        }\n\n        codes.push(charMap[index])\n      }\n\n      yield str(...codes)\n    }\n  }\n}\n","import { proto } from '../object';\nexport const renderer = (tmpl, scope = {}, ref = '$') => new Function(`{${[...proto(scope)]}}`, ref, `return \\`${tmpl}\\``).bind(null, scope);\nexport const render = (tmpl, context = {}, ref = '$') => new Function(`{${[...proto(context)]}}`, ref, `return \\`${tmpl}\\``)(context, context);\n","// https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14\nexport const\n\n// ClearBufferMask\nDEPTH_BUFFER_BIT = 0x00000100,\nSTENCIL_BUFFER_BIT = 0x00000400,\nCOLOR_BUFFER_BIT = 0x00004000,\n\n// BeginMode\nPOINTS = 0x0000,\nLINES = 0x0001,\nLINE_LOOP = 0x0002,\nLINE_STRIP = 0x0003,\nTRIANGLES = 0x0004,\nTRIANGLE_STRIP = 0x0005,\nTRIANGLE_FAN = 0x0006,\n\n// AlphaFunction (not supported in ES20)\n// NEVER\n// LESS\n// EQUAL\n// LEQUAL\n// GREATER\n// NOTEQUAL\n// GEQUAL\n// ALWAYS\n\n// BlendingFactorDest\nZERO = 0,\nONE = 1,\nSRC_COLOR = 0x0300,\nONE_MINUS_SRC_COLOR = 0x0301,\nSRC_ALPHA = 0x0302,\nONE_MINUS_SRC_ALPHA = 0x0303,\nDST_ALPHA = 0x0304,\nONE_MINUS_DST_ALPHA = 0x0305,\n\n// BlendingFactorSrc\n// ZERO\n// ONE\nDST_COLOR = 0x0306,\nONE_MINUS_DST_COLOR = 0x0307,\nSRC_ALPHA_SATURATE = 0x0308,\n// SRC_ALPHA\n// ONE_MINUS_SRC_ALPHA\n// DST_ALPHA\n// ONE_MINUS_DST_ALPHA\n\n// BlendEquationSeparate\nFUNC_ADD = 0x8006,\nBLEND_EQUATION = 0x8009,\nBLEND_EQUATION_RGB = 0x8009, // same as BLEND_EQUATION\nBLEND_EQUATION_ALPHA = 0x883D,\n\n// BlendSubtract\nFUNC_SUBTRACT = 0x800A,\nFUNC_REVERSE_SUBTRACT = 0x800B,\n\n// Separate Blend Functions\nBLEND_DST_RGB = 0x80C8,\nBLEND_SRC_RGB = 0x80C9,\nBLEND_DST_ALPHA = 0x80CA,\nBLEND_SRC_ALPHA = 0x80CB,\nCONSTANT_COLOR = 0x8001,\nONE_MINUS_CONSTANT_COLOR = 0x8002,\nCONSTANT_ALPHA = 0x8003,\nONE_MINUS_CONSTANT_ALPHA = 0x8004,\nBLEND_COLOR = 0x8005,\n\n// Buffer Objects\nARRAY_BUFFER = 0x8892,\nELEMENT_ARRAY_BUFFER = 0x8893,\nARRAY_BUFFER_BINDING = 0x8894,\nELEMENT_ARRAY_BUFFER_BINDING = 0x8895,\n\nSTREAM_DRAW = 0x88E0,\nSTATIC_DRAW = 0x88E4,\nDYNAMIC_DRAW = 0x88E8,\n\nBUFFER_SIZE = 0x8764,\nBUFFER_USAGE = 0x8765,\n\nCURRENT_VERTEX_ATTRIB = 0x8626,\n\n// CullFaceMode\nFRONT = 0x0404,\nBACK = 0x0405,\nFRONT_AND_BACK = 0x0408,\n\n// DepthFunction\n// NEVER\n// LESS\n// EQUAL\n// LEQUAL\n// GREATER\n// NOTEQUAL\n// GEQUAL\n// ALWAYS\n\n// EnableCap\n// TEXTURE_2D\nCULL_FACE = 0x0B44,\nBLEND = 0x0BE2,\nDITHER = 0x0BD0,\nSTENCIL_TEST = 0x0B90,\nDEPTH_TEST = 0x0B71,\nSCISSOR_TEST = 0x0C11,\nPOLYGON_OFFSET_FILL = 0x8037,\nSAMPLE_ALPHA_TO_COVERAGE = 0x809E,\nSAMPLE_COVERAGE = 0x80A0,\n\n// ErrorCode\nNO_ERROR = 0,\nINVALID_ENUM = 0x0500,\nINVALID_VALUE = 0x0501,\nINVALID_OPERATION = 0x0502,\nOUT_OF_MEMORY = 0x0505,\n\n// FrontFaceDirection\nCW = 0x0900,\nCCW = 0x0901,\n\n// GetPName\nLINE_WIDTH = 0x0B21,\nALIASED_POINT_SIZE_RANGE = 0x846D,\nALIASED_LINE_WIDTH_RANGE = 0x846E,\nCULL_FACE_MODE = 0x0B45,\nFRONT_FACE = 0x0B46,\nDEPTH_RANGE = 0x0B70,\nDEPTH_WRITEMASK = 0x0B72,\nDEPTH_CLEAR_VALUE = 0x0B73,\nDEPTH_FUNC = 0x0B74,\nSTENCIL_CLEAR_VALUE = 0x0B91,\nSTENCIL_FUNC = 0x0B92,\nSTENCIL_FAIL = 0x0B94,\nSTENCIL_PASS_DEPTH_FAIL = 0x0B95,\nSTENCIL_PASS_DEPTH_PASS = 0x0B96,\nSTENCIL_REF = 0x0B97,\nSTENCIL_VALUE_MASK = 0x0B93,\nSTENCIL_WRITEMASK = 0x0B98,\nSTENCIL_BACK_FUNC = 0x8800,\nSTENCIL_BACK_FAIL = 0x8801,\nSTENCIL_BACK_PASS_DEPTH_FAIL = 0x8802,\nSTENCIL_BACK_PASS_DEPTH_PASS = 0x8803,\nSTENCIL_BACK_REF = 0x8CA3,\nSTENCIL_BACK_VALUE_MASK = 0x8CA4,\nSTENCIL_BACK_WRITEMASK = 0x8CA5,\nVIEWPORT = 0x0BA2,\nSCISSOR_BOX = 0x0C10,\n// SCISSOR_TEST\nCOLOR_CLEAR_VALUE = 0x0C22,\nCOLOR_WRITEMASK = 0x0C23,\nUNPACK_ALIGNMENT = 0x0CF5,\nPACK_ALIGNMENT = 0x0D05,\nMAX_TEXTURE_SIZE = 0x0D33,\nMAX_VIEWPORT_DIMS = 0x0D3A,\nSUBPIXEL_BITS = 0x0D50,\nRED_BITS = 0x0D52,\nGREEN_BITS = 0x0D53,\nBLUE_BITS = 0x0D54,\nALPHA_BITS = 0x0D55,\nDEPTH_BITS = 0x0D56,\nSTENCIL_BITS = 0x0D57,\nPOLYGON_OFFSET_UNITS = 0x2A00,\n// POLYGON_OFFSET_FILL\nPOLYGON_OFFSET_FACTOR = 0x8038,\nTEXTURE_BINDING_2D = 0x8069,\nSAMPLE_BUFFERS = 0x80A8,\nSAMPLES = 0x80A9,\nSAMPLE_COVERAGE_VALUE = 0x80AA,\nSAMPLE_COVERAGE_INVERT = 0x80AB,\n\n// GetTextureParameter\n// TEXTURE_MAG_FILTER\n// TEXTURE_MIN_FILTER\n// TEXTURE_WRAP_S\n// TEXTURE_WRAP_T\n\nCOMPRESSED_TEXTURE_FORMATS = 0x86A3,\n\n// HintMode\nDONT_CARE = 0x1100,\nFASTEST = 0x1101,\nNICEST = 0x1102,\n\n// HintTarget\nGENERATE_MIPMAP_HINT = 0x8192,\n\n// DataType\nBYTE = 0x1400,\nUNSIGNED_BYTE = 0x1401,\nSHORT = 0x1402,\nUNSIGNED_SHORT = 0x1403,\nINT = 0x1404,\nUNSIGNED_INT = 0x1405,\nFLOAT = 0x1406,\n\n// PixelFormat\nDEPTH_COMPONENT = 0x1902,\nALPHA = 0x1906,\nRGB = 0x1907,\nRGBA = 0x1908,\nLUMINANCE = 0x1909,\nLUMINANCE_ALPHA = 0x190A,\n\n// PixelType\n// UNSIGNED_BYTE\nUNSIGNED_SHORT_4_4_4_4 = 0x8033,\nUNSIGNED_SHORT_5_5_5_1 = 0x8034,\nUNSIGNED_SHORT_5_6_5 = 0x8363,\n\n// Shaders\nFRAGMENT_SHADER = 0x8B30,\nVERTEX_SHADER = 0x8B31,\nMAX_VERTEX_ATTRIBS = 0x8869,\nMAX_VERTEX_UNIFORM_VECTORS = 0x8DFB,\nMAX_VARYING_VECTORS = 0x8DFC,\nMAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D,\nMAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C,\nMAX_TEXTURE_IMAGE_UNITS = 0x8872,\nMAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD,\nSHADER_TYPE = 0x8B4F,\nDELETE_STATUS = 0x8B80,\nLINK_STATUS = 0x8B82,\nVALIDATE_STATUS = 0x8B83,\nATTACHED_SHADERS = 0x8B85,\nACTIVE_UNIFORMS = 0x8B86,\nACTIVE_ATTRIBUTES = 0x8B89,\nSHADING_LANGUAGE_VERSION = 0x8B8C,\nCURRENT_PROGRAM = 0x8B8D,\n\n// StencilFunction\nNEVER = 0x0200,\nLESS = 0x0201,\nEQUAL = 0x0202,\nLEQUAL = 0x0203,\nGREATER = 0x0204,\nNOTEQUAL = 0x0205,\nGEQUAL = 0x0206,\nALWAYS = 0x0207,\n\n// StencilOp\n// ZERO\nKEEP = 0x1E00,\nREPLACE = 0x1E01,\nINCR = 0x1E02,\nDECR = 0x1E03,\nINVERT = 0x150A,\nINCR_WRAP = 0x8507,\nDECR_WRAP = 0x8508,\n\n// StringName\nVENDOR = 0x1F00,\nRENDERER = 0x1F01,\nVERSION = 0x1F02,\n\n// TextureMagFilter\nNEAREST = 0x2600,\nLINEAR = 0x2601,\n\n// TextureMinFilter\n// NEAREST\n// LINEAR\nNEAREST_MIPMAP_NEAREST = 0x2700,\nLINEAR_MIPMAP_NEAREST = 0x2701,\nNEAREST_MIPMAP_LINEAR = 0x2702,\nLINEAR_MIPMAP_LINEAR = 0x2703,\n\n// TextureParameterName\nTEXTURE_MAG_FILTER = 0x2800,\nTEXTURE_MIN_FILTER = 0x2801,\nTEXTURE_WRAP_S = 0x2802,\nTEXTURE_WRAP_T = 0x2803,\n\n// TextureTarget\nTEXTURE_2D = 0x0DE1,\nTEXTURE = 0x1702,\n\nTEXTURE_CUBE_MAP = 0x8513,\nTEXTURE_BINDING_CUBE_MAP = 0x8514,\nTEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,\nTEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,\nTEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,\nTEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,\nTEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,\nTEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A,\nMAX_CUBE_MAP_TEXTURE_SIZE = 0x851C,\n\n// TextureUnit\nTEXTURE0 = 0x84C0,\nTEXTURE1 = 0x84C1,\nTEXTURE2 = 0x84C2,\nTEXTURE3 = 0x84C3,\nTEXTURE4 = 0x84C4,\nTEXTURE5 = 0x84C5,\nTEXTURE6 = 0x84C6,\nTEXTURE7 = 0x84C7,\nTEXTURE8 = 0x84C8,\nTEXTURE9 = 0x84C9,\nTEXTURE10 = 0x84CA,\nTEXTURE11 = 0x84CB,\nTEXTURE12 = 0x84CC,\nTEXTURE13 = 0x84CD,\nTEXTURE14 = 0x84CE,\nTEXTURE15 = 0x84CF,\nTEXTURE16 = 0x84D0,\nTEXTURE17 = 0x84D1,\nTEXTURE18 = 0x84D2,\nTEXTURE19 = 0x84D3,\nTEXTURE20 = 0x84D4,\nTEXTURE21 = 0x84D5,\nTEXTURE22 = 0x84D6,\nTEXTURE23 = 0x84D7,\nTEXTURE24 = 0x84D8,\nTEXTURE25 = 0x84D9,\nTEXTURE26 = 0x84DA,\nTEXTURE27 = 0x84DB,\nTEXTURE28 = 0x84DC,\nTEXTURE29 = 0x84DD,\nTEXTURE30 = 0x84DE,\nTEXTURE31 = 0x84DF,\nACTIVE_TEXTURE = 0x84E0,\n\n// TextureWrapMode\nREPEAT = 0x2901,\nCLAMP_TO_EDGE = 0x812F,\nMIRRORED_REPEAT = 0x8370,\n\n// Uniform Types\nFLOAT_VEC2 = 0x8B50,\nFLOAT_VEC3 = 0x8B51,\nFLOAT_VEC4 = 0x8B52,\nINT_VEC2 = 0x8B53,\nINT_VEC3 = 0x8B54,\nINT_VEC4 = 0x8B55,\nBOOL = 0x8B56,\nBOOL_VEC2 = 0x8B57,\nBOOL_VEC3 = 0x8B58,\nBOOL_VEC4 = 0x8B59,\nFLOAT_MAT2 = 0x8B5A,\nFLOAT_MAT3 = 0x8B5B,\nFLOAT_MAT4 = 0x8B5C,\nSAMPLER_2D = 0x8B5E,\nSAMPLER_CUBE = 0x8B60,\n\n// Vertex Arrays\nVERTEX_ATTRIB_ARRAY_ENABLED = 0x8622,\nVERTEX_ATTRIB_ARRAY_SIZE = 0x8623,\nVERTEX_ATTRIB_ARRAY_STRIDE = 0x8624,\nVERTEX_ATTRIB_ARRAY_TYPE = 0x8625,\nVERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A,\nVERTEX_ATTRIB_ARRAY_POINTER = 0x8645,\nVERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F,\n\n// Read Format\nIMPLEMENTATION_COLOR_READ_TYPE = 0x8B9A,\nIMPLEMENTATION_COLOR_READ_FORMAT = 0x8B9B,\n\n// Shader Source\nCOMPILE_STATUS = 0x8B81,\n\n// Shader Precision-Specified Types\nLOW_FLOAT = 0x8DF0,\nMEDIUM_FLOAT = 0x8DF1,\nHIGH_FLOAT = 0x8DF2,\nLOW_INT = 0x8DF3,\nMEDIUM_INT = 0x8DF4,\nHIGH_INT = 0x8DF5,\n\n// Framebuffer Object.\nFRAMEBUFFER = 0x8D40,\nRENDERBUFFER = 0x8D41,\n\nRGBA4 = 0x8056,\nRGB5_A1 = 0x8057,\nRGB565 = 0x8D62,\nDEPTH_COMPONENT16 = 0x81A5,\nSTENCIL_INDEX8 = 0x8D48,\nDEPTH_STENCIL = 0x84F9,\n\nRENDERBUFFER_WIDTH = 0x8D42,\nRENDERBUFFER_HEIGHT = 0x8D43,\nRENDERBUFFER_INTERNAL_FORMAT = 0x8D44,\nRENDERBUFFER_RED_SIZE = 0x8D50,\nRENDERBUFFER_GREEN_SIZE = 0x8D51,\nRENDERBUFFER_BLUE_SIZE = 0x8D52,\nRENDERBUFFER_ALPHA_SIZE = 0x8D53,\nRENDERBUFFER_DEPTH_SIZE = 0x8D54,\nRENDERBUFFER_STENCIL_SIZE = 0x8D55,\n\nFRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0,\nFRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1,\nFRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2,\nFRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3,\n\nCOLOR_ATTACHMENT0 = 0x8CE0,\nDEPTH_ATTACHMENT = 0x8D00,\nSTENCIL_ATTACHMENT = 0x8D20,\nDEPTH_STENCIL_ATTACHMENT = 0x821A,\n\nNONE = 0,\n\nFRAMEBUFFER_COMPLETE = 0x8CD5,\nFRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6,\nFRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7,\nFRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9,\nFRAMEBUFFER_UNSUPPORTED = 0x8CDD,\n\nFRAMEBUFFER_BINDING = 0x8CA6,\nRENDERBUFFER_BINDING = 0x8CA7,\nMAX_RENDERBUFFER_SIZE = 0x84E8,\n\nINVALID_FRAMEBUFFER_OPERATION = 0x0506,\n\n// WebGL-specific enums\nUNPACK_FLIP_Y_WEBGL = 0x9240,\nUNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241,\nCONTEXT_LOST_WEBGL = 0x9242,\nUNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243,\nBROWSER_DEFAULT_WEBGL = 0x9244\n","// https://www.khronos.org/registry/webgl/specs/latest/2.0/#3.7\nexport const\n\nREAD_BUFFER = 0x0C02,\nUNPACK_ROW_LENGTH = 0x0CF2,\nUNPACK_SKIP_ROWS = 0x0CF3,\nUNPACK_SKIP_PIXELS = 0x0CF4,\nPACK_ROW_LENGTH = 0x0D02,\nPACK_SKIP_ROWS = 0x0D03,\nPACK_SKIP_PIXELS = 0x0D04,\nCOLOR = 0x1800,\nDEPTH = 0x1801,\nSTENCIL = 0x1802,\nRED = 0x1903,\nRGB8 = 0x8051,\nRGBA8 = 0x8058,\nRGB10_A2 = 0x8059,\nTEXTURE_BINDING_3D = 0x806A,\nUNPACK_SKIP_IMAGES = 0x806D,\nUNPACK_IMAGE_HEIGHT = 0x806E,\nTEXTURE_3D = 0x806F,\nTEXTURE_WRAP_R = 0x8072,\nMAX_3D_TEXTURE_SIZE = 0x8073,\nUNSIGNED_INT_2_10_10_10_REV = 0x8368,\nMAX_ELEMENTS_VERTICES = 0x80E8,\nMAX_ELEMENTS_INDICES = 0x80E9,\nTEXTURE_MIN_LOD = 0x813A,\nTEXTURE_MAX_LOD = 0x813B,\nTEXTURE_BASE_LEVEL = 0x813C,\nTEXTURE_MAX_LEVEL = 0x813D,\nMIN = 0x8007,\nMAX = 0x8008,\nDEPTH_COMPONENT24 = 0x81A6,\nMAX_TEXTURE_LOD_BIAS = 0x84FD,\nTEXTURE_COMPARE_MODE = 0x884C,\nTEXTURE_COMPARE_FUNC = 0x884D,\nCURRENT_QUERY = 0x8865,\nQUERY_RESULT = 0x8866,\nQUERY_RESULT_AVAILABLE = 0x8867,\nSTREAM_READ = 0x88E1,\nSTREAM_COPY = 0x88E2,\nSTATIC_READ = 0x88E5,\nSTATIC_COPY = 0x88E6,\nDYNAMIC_READ = 0x88E9,\nDYNAMIC_COPY = 0x88EA,\nMAX_DRAW_BUFFERS = 0x8824,\nDRAW_BUFFER0 = 0x8825,\nDRAW_BUFFER1 = 0x8826,\nDRAW_BUFFER2 = 0x8827,\nDRAW_BUFFER3 = 0x8828,\nDRAW_BUFFER4 = 0x8829,\nDRAW_BUFFER5 = 0x882A,\nDRAW_BUFFER6 = 0x882B,\nDRAW_BUFFER7 = 0x882C,\nDRAW_BUFFER8 = 0x882D,\nDRAW_BUFFER9 = 0x882E,\nDRAW_BUFFER10 = 0x882F,\nDRAW_BUFFER11 = 0x8830,\nDRAW_BUFFER12 = 0x8831,\nDRAW_BUFFER13 = 0x8832,\nDRAW_BUFFER14 = 0x8833,\nDRAW_BUFFER15 = 0x8834,\nMAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49,\nMAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A,\nSAMPLER_3D = 0x8B5F,\nSAMPLER_2D_SHADOW = 0x8B62,\nFRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B,\nPIXEL_PACK_BUFFER = 0x88EB,\nPIXEL_UNPACK_BUFFER = 0x88EC,\nPIXEL_PACK_BUFFER_BINDING = 0x88ED,\nPIXEL_UNPACK_BUFFER_BINDING = 0x88EF,\nFLOAT_MAT2x3 = 0x8B65,\nFLOAT_MAT2x4 = 0x8B66,\nFLOAT_MAT3x2 = 0x8B67,\nFLOAT_MAT3x4 = 0x8B68,\nFLOAT_MAT4x2 = 0x8B69,\nFLOAT_MAT4x3 = 0x8B6A,\nSRGB = 0x8C40,\nSRGB8 = 0x8C41,\nSRGB8_ALPHA8 = 0x8C43,\nCOMPARE_REF_TO_TEXTURE = 0x884E,\nRGBA32F = 0x8814,\nRGB32F = 0x8815,\nRGBA16F = 0x881A,\nRGB16F = 0x881B,\nVERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD,\nMAX_ARRAY_TEXTURE_LAYERS = 0x88FF,\nMIN_PROGRAM_TEXEL_OFFSET = 0x8904,\nMAX_PROGRAM_TEXEL_OFFSET = 0x8905,\nMAX_VARYING_COMPONENTS = 0x8B4B,\nTEXTURE_2D_ARRAY = 0x8C1A,\nTEXTURE_BINDING_2D_ARRAY = 0x8C1D,\nR11F_G11F_B10F = 0x8C3A,\nUNSIGNED_INT_10F_11F_11F_REV = 0x8C3B,\nRGB9_E5 = 0x8C3D,\nUNSIGNED_INT_5_9_9_9_REV = 0x8C3E,\nTRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F,\nMAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80,\nTRANSFORM_FEEDBACK_VARYINGS = 0x8C83,\nTRANSFORM_FEEDBACK_BUFFER_START = 0x8C84,\nTRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85,\nTRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88,\nRASTERIZER_DISCARD = 0x8C89,\nMAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A,\nMAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B,\nINTERLEAVED_ATTRIBS = 0x8C8C,\nSEPARATE_ATTRIBS = 0x8C8D,\nTRANSFORM_FEEDBACK_BUFFER = 0x8C8E,\nTRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F,\nRGBA32UI = 0x8D70,\nRGB32UI = 0x8D71,\nRGBA16UI = 0x8D76,\nRGB16UI = 0x8D77,\nRGBA8UI = 0x8D7C,\nRGB8UI = 0x8D7D,\nRGBA32I = 0x8D82,\nRGB32I = 0x8D83,\nRGBA16I = 0x8D88,\nRGB16I = 0x8D89,\nRGBA8I = 0x8D8E,\nRGB8I = 0x8D8F,\nRED_INTEGER = 0x8D94,\nRGB_INTEGER = 0x8D98,\nRGBA_INTEGER = 0x8D99,\nSAMPLER_2D_ARRAY = 0x8DC1,\nSAMPLER_2D_ARRAY_SHADOW = 0x8DC4,\nSAMPLER_CUBE_SHADOW = 0x8DC5,\nUNSIGNED_INT_VEC2 = 0x8DC6,\nUNSIGNED_INT_VEC3 = 0x8DC7,\nUNSIGNED_INT_VEC4 = 0x8DC8,\nINT_SAMPLER_2D = 0x8DCA,\nINT_SAMPLER_3D = 0x8DCB,\nINT_SAMPLER_CUBE = 0x8DCC,\nINT_SAMPLER_2D_ARRAY = 0x8DCF,\nUNSIGNED_INT_SAMPLER_2D = 0x8DD2,\nUNSIGNED_INT_SAMPLER_3D = 0x8DD3,\nUNSIGNED_INT_SAMPLER_CUBE = 0x8DD4,\nUNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7,\nDEPTH_COMPONENT32F = 0x8CAC,\nDEPTH32F_STENCIL8 = 0x8CAD,\nFLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD,\nFRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210,\nFRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211,\nFRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212,\nFRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213,\nFRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214,\nFRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215,\nFRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216,\nFRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217,\nFRAMEBUFFER_DEFAULT = 0x8218,\n// DEPTH_STENCIL_ATTACHMENT = 0x821A, // duplicate\n// DEPTH_STENCIL = 0x84F9, // duplicate\nUNSIGNED_INT_24_8 = 0x84FA,\nDEPTH24_STENCIL8 = 0x88F0,\nUNSIGNED_NORMALIZED = 0x8C17,\nDRAW_FRAMEBUFFER_BINDING = 0x8CA6, // Same as FRAMEBUFFER_BINDING\nREAD_FRAMEBUFFER = 0x8CA8,\nDRAW_FRAMEBUFFER = 0x8CA9,\nREAD_FRAMEBUFFER_BINDING = 0x8CAA,\nRENDERBUFFER_SAMPLES = 0x8CAB,\nFRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4,\nMAX_COLOR_ATTACHMENTS = 0x8CDF,\nCOLOR_ATTACHMENT1 = 0x8CE1,\nCOLOR_ATTACHMENT2 = 0x8CE2,\nCOLOR_ATTACHMENT3 = 0x8CE3,\nCOLOR_ATTACHMENT4 = 0x8CE4,\nCOLOR_ATTACHMENT5 = 0x8CE5,\nCOLOR_ATTACHMENT6 = 0x8CE6,\nCOLOR_ATTACHMENT7 = 0x8CE7,\nCOLOR_ATTACHMENT8 = 0x8CE8,\nCOLOR_ATTACHMENT9 = 0x8CE9,\nCOLOR_ATTACHMENT10 = 0x8CEA,\nCOLOR_ATTACHMENT11 = 0x8CEB,\nCOLOR_ATTACHMENT12 = 0x8CEC,\nCOLOR_ATTACHMENT13 = 0x8CED,\nCOLOR_ATTACHMENT14 = 0x8CEE,\nCOLOR_ATTACHMENT15 = 0x8CEF,\nFRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56,\nMAX_SAMPLES = 0x8D57,\nHALF_FLOAT = 0x140B,\nRG = 0x8227,\nRG_INTEGER = 0x8228,\nR8 = 0x8229,\nRG8 = 0x822B,\nR16F = 0x822D,\nR32F = 0x822E,\nRG16F = 0x822F,\nRG32F = 0x8230,\nR8I = 0x8231,\nR8UI = 0x8232,\nR16I = 0x8233,\nR16UI = 0x8234,\nR32I = 0x8235,\nR32UI = 0x8236,\nRG8I = 0x8237,\nRG8UI = 0x8238,\nRG16I = 0x8239,\nRG16UI = 0x823A,\nRG32I = 0x823B,\nRG32UI = 0x823C,\nVERTEX_ARRAY_BINDING = 0x85B5,\nR8_SNORM = 0x8F94,\nRG8_SNORM = 0x8F95,\nRGB8_SNORM = 0x8F96,\nRGBA8_SNORM = 0x8F97,\nSIGNED_NORMALIZED = 0x8F9C,\nCOPY_READ_BUFFER = 0x8F36,\nCOPY_WRITE_BUFFER = 0x8F37,\nCOPY_READ_BUFFER_BINDING = 0x8F36, // Same as COPY_READ_BUFFER\nCOPY_WRITE_BUFFER_BINDING = 0x8F37, // Same as COPY_WRITE_BUFFER\nUNIFORM_BUFFER = 0x8A11,\nUNIFORM_BUFFER_BINDING = 0x8A28,\nUNIFORM_BUFFER_START = 0x8A29,\nUNIFORM_BUFFER_SIZE = 0x8A2A,\nMAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B,\nMAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D,\nMAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E,\nMAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F,\nMAX_UNIFORM_BLOCK_SIZE = 0x8A30,\nMAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31,\nMAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33,\nUNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34,\nACTIVE_UNIFORM_BLOCKS = 0x8A36,\nUNIFORM_TYPE = 0x8A37,\nUNIFORM_SIZE = 0x8A38,\nUNIFORM_BLOCK_INDEX = 0x8A3A,\nUNIFORM_OFFSET = 0x8A3B,\nUNIFORM_ARRAY_STRIDE = 0x8A3C,\nUNIFORM_MATRIX_STRIDE = 0x8A3D,\nUNIFORM_IS_ROW_MAJOR = 0x8A3E,\nUNIFORM_BLOCK_BINDING = 0x8A3F,\nUNIFORM_BLOCK_DATA_SIZE = 0x8A40,\nUNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42,\nUNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43,\nUNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44,\nUNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46,\nINVALID_INDEX = 0xFFFFFFFF,\nMAX_VERTEX_OUTPUT_COMPONENTS = 0x9122,\nMAX_FRAGMENT_INPUT_COMPONENTS = 0x9125,\nMAX_SERVER_WAIT_TIMEOUT = 0x9111,\nOBJECT_TYPE = 0x9112,\nSYNC_CONDITION = 0x9113,\nSYNC_STATUS = 0x9114,\nSYNC_FLAGS = 0x9115,\nSYNC_FENCE = 0x9116,\nSYNC_GPU_COMMANDS_COMPLETE = 0x9117,\nUNSIGNALED = 0x9118,\nSIGNALED = 0x9119,\nALREADY_SIGNALED = 0x911A,\nTIMEOUT_EXPIRED = 0x911B,\nCONDITION_SATISFIED = 0x911C,\nWAIT_FAILED = 0x911D,\nSYNC_FLUSH_COMMANDS_BIT = 0x00000001,\nVERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE,\nANY_SAMPLES_PASSED = 0x8C2F,\nANY_SAMPLES_PASSED_CONSERVATIVE = 0x8D6A,\nSAMPLER_BINDING = 0x8919,\nRGB10_A2UI = 0x906F,\nINT_2_10_10_10_REV = 0x8D9F,\nTRANSFORM_FEEDBACK = 0x8E22,\nTRANSFORM_FEEDBACK_PAUSED = 0x8E23,\nTRANSFORM_FEEDBACK_ACTIVE = 0x8E24,\nTRANSFORM_FEEDBACK_BINDING = 0x8E25,\nTEXTURE_IMMUTABLE_FORMAT = 0x912F,\nMAX_ELEMENT_INDEX = 0x8D6B,\nTEXTURE_IMMUTABLE_LEVELS = 0x82DF,\n\n// WebGL-specific enums\nMAX_CLIENT_WAIT_TIMEOUT_WEBGL = 0x9247\n","import * as gle from './enums'\nimport { max } from 'wheels/esm/math'\nimport { element } from 'wheels/esm/dom'\n\nexport type Callback<T = WebGLObject> = (gl: WebGL2RenderingContext, object: T) => void\nexport type Binder<T = WebGLObject> = (object: T | null) => void\nexport type Context<T = WebGLObject> = (fn?: Callback<T>) => T\nexport type Factory<T = WebGLObject> = (gl: WebGL2RenderingContext, target?: GLenum) => Context<T>\n\nexport const api = (attributes?: WebGLContextAttributes, ...extensions: string[]) => {\n  const canvas = element('canvas')()\n  const gl = canvas.getContext('webgl2', attributes)\n\n  if (!gl)\n    throw new Error('WebGL2 is not available')\n\n  for (const ext of extensions)\n    if (!gl.getExtension(ext))\n      throw new Error(`\"${ext}\" extension is not available`)\n\n  return gl\n}\n\nexport const shader = (gl: WebGL2RenderingContext, type: GLenum, source: string) => {\n  const sourceʹ = '#version 300 es\\n' + source\n  const shader = gl.createShader(type)!\n\n  gl.shaderSource(shader, sourceʹ)\n  gl.compileShader(shader)\n\n  if (!gl.getShaderParameter(shader, gle.COMPILE_STATUS))\n    throw new Error(`Shader error:\\n${gl.getShaderInfoLog(shader)}\\n${lineNumbers(sourceʹ)}\\n`)\n\n  return shader\n}\n\nexport const program = (gl: WebGL2RenderingContext, vert: WebGLShader, frag: WebGLShader) => {\n  const program = gl.createProgram()!\n\n  gl.attachShader(program, vert)\n  gl.attachShader(program, frag)\n  gl.linkProgram(program)\n\n  if (!gl.getProgramParameter(program, gle.LINK_STATUS))\n    throw new Error(`Program error: ${gl.getProgramInfoLog(program)}`)\n\n  return program\n}\n\nexport const array: Factory<WebGLVertexArrayObject> = gl => {\n  const object = gl.createVertexArray()!\n  return context(gl, object, object => gl.bindVertexArray(object))\n}\n\nexport const buffer: Factory<WebGLBuffer> = (gl, target = gle.ARRAY_BUFFER) => {\n  const object = gl.createBuffer()!\n  return context(gl, object, object => gl.bindBuffer(target, object))\n}\n\nexport const texture: Factory<WebGLTexture> = (gl, target = gle.TEXTURE_2D) => {\n  const object = gl.createTexture()!\n  return context(gl, object, object => gl.bindTexture(target, object))\n}\n\nexport const framebuffer: Factory<WebGLFramebuffer> = (gl, target = gle.FRAMEBUFFER) => {\n  const object = gl.createFramebuffer()!\n  return context(gl, object, object => gl.bindFramebuffer(target, object))\n}\n\nexport const uniforms = (gl: WebGL2RenderingContext, program: WebGLProgram) =>\n  (name: string) => gl.getUniformLocation(program, name)\n\n//\n\nconst zeroPad = (size: number, value: string) =>\n  '0'.repeat(max(0, size - value.length)) + value\n\nconst lineNumbers = (source: string, n = 1) =>\n  source.replace(/^.*/gm, line => zeroPad(5, `${n++}: `) + line)\n\nconst context = <T>(gl: WebGL2RenderingContext, object: T, bind: Binder<T>): Context<T> =>\n  fn => (fn && (bind(object), fn(gl, object), bind(null)), object)\n","import { render } from 'wheels/esm/text/template'\nimport { resize, Source } from '../canvas'\nimport * as gle from '../gl/enums'\nimport * as glu from '../gl/utils'\nimport { str } from '../utils'\nimport { combine } from './LUT'\nimport { Renderer } from './Renderer'\nimport { Settings } from './Settings'\n\nimport V_BASE  from 'glsl/base.vert'\nimport F_PASS1 from 'glsl/pass1.frag'\nimport F_PASS2 from 'glsl/pass2.frag'\n\nconst enum Attribute { position }\nconst enum Texture { dst, src, lut }\n\nconst filterNearest: glu.Callback = gl => {\n  gl.texParameteri(gle.TEXTURE_2D, gle.TEXTURE_MIN_FILTER, gle.NEAREST)\n  gl.texParameteri(gle.TEXTURE_2D, gle.TEXTURE_MAG_FILTER, gle.NEAREST)\n}\n\nconst quadGeometry = (index: number): glu.Callback => gl => {\n  const quad = Float32Array.of(1, 1, -1, 1, 1, -1, -1, -1)\n  gl.bufferData(gle.ARRAY_BUFFER, quad, gle.STATIC_DRAW)\n  gl.vertexAttribPointer(index, 2, gle.FLOAT, false, 0, 0)\n  gl.enableVertexAttribArray(index)\n}\n\nexport class GPURenderer extends Renderer {\n  private readonly pass1: WebGLProgram\n  private readonly pass2: WebGLProgram\n\n  private readonly gl     = glu.api({}, 'EXT_color_buffer_float')\n  private readonly fbo    = glu.framebuffer(this.gl)()\n  private readonly txLUT  = glu.texture(this.gl)(filterNearest)\n  private readonly txOdd  = glu.texture(this.gl)(filterNearest)\n  private readonly txEven = glu.texture(this.gl)(filterNearest)\n\n  private readonly lut = combine(...this.luts)\n  private indices = new Float32Array()\n\n  constructor(settings?: Partial<Settings>) {\n    super(settings)\n\n    const vBase  = glu.shader(this.gl, gle.VERTEX_SHADER,   render(V_BASE,  this))\n    const fPass1 = glu.shader(this.gl, gle.FRAGMENT_SHADER, render(F_PASS1, this))\n    const fPass2 = glu.shader(this.gl, gle.FRAGMENT_SHADER, render(F_PASS2, this))\n\n    this.pass1 = glu.program(this.gl, vBase, fPass1)\n    this.pass2 = glu.program(this.gl, vBase, fPass2)\n\n    glu.buffer(this.gl)(quadGeometry(Attribute.position))\n  }\n\n  *lines(src: Source, width: number, height: number) {\n    const { settings, charMap, lut, gl, pass1, pass2, fbo, txLUT, txOdd, txEven } = this\n\n    const srcWidth  = settings.lutWidth  * width\n    const srcHeight = settings.lutHeight * height\n    const srcʹ = resize(src, srcWidth, srcHeight)\n\n    const uPass1 = glu.uniforms(gl, pass1)\n    const uPass2 = glu.uniforms(gl, pass2)\n\n    if (this.indices.length !== width * height)\n      this.indices = new Float32Array(width * height)\n\n    // enable framebuffer\n    gl.bindFramebuffer(gle.FRAMEBUFFER, fbo)\n\n    // 1st pass\n    gl.activeTexture(gle.TEXTURE0 + Texture.lut)\n    gl.bindTexture(gle.TEXTURE_2D, txLUT)\n    gl.texImage2D(gle.TEXTURE_2D, 0, gle.R32F, lut.width, lut.height, 0, gle.RED, gle.FLOAT, lut)\n\n    gl.activeTexture(gle.TEXTURE0 + Texture.src)\n    gl.bindTexture(gle.TEXTURE_2D, txOdd)\n    gl.texImage2D(gle.TEXTURE_2D, 0, gle.RGBA, gle.RGBA, gle.UNSIGNED_BYTE, srcʹ.canvas)\n\n    gl.activeTexture(gle.TEXTURE0 + Texture.dst)\n    gl.bindTexture(gle.TEXTURE_2D, txEven)\n    gl.texImage2D(gle.TEXTURE_2D, 0, gle.R32F, srcWidth, srcHeight, 0, gle.RED, gle.FLOAT, null)\n    gl.framebufferTexture2D(gle.FRAMEBUFFER, gle.COLOR_ATTACHMENT0, gle.TEXTURE_2D, txEven, 0)\n\n    gl.useProgram(pass1)\n    gl.uniform1i(uPass1('uSrc'), Texture.src)\n    gl.uniform1f(uPass1('uBrightness'), settings.brightness)\n    gl.uniform1f(uPass1('uGamma'), settings.gamma)\n    gl.uniform1f(uPass1('uNoise'), settings.noise)\n    gl.uniform1f(uPass1('uRandom'), Math.random())\n    gl.viewport(0, 0, srcWidth, srcHeight)\n    gl.drawArrays(gle.TRIANGLE_STRIP, 0, 4)\n\n    // 2nd pass\n    gl.activeTexture(gle.TEXTURE0 + Texture.src)\n    gl.bindTexture(gle.TEXTURE_2D, txEven)\n\n    gl.activeTexture(gle.TEXTURE0 + Texture.dst)\n    gl.bindTexture(gle.TEXTURE_2D, txOdd)\n    gl.texImage2D(gle.TEXTURE_2D, 0, gle.R32F, srcWidth, srcHeight, 0, gle.RED, gle.FLOAT, null)\n    gl.framebufferTexture2D(gle.FRAMEBUFFER, gle.COLOR_ATTACHMENT0, gle.TEXTURE_2D, txOdd, 0)\n\n    gl.useProgram(pass2)\n    gl.uniform1i(uPass2('uSrc'), Texture.src)\n    gl.uniform1i(uPass2('uLUT'), Texture.lut)\n    gl.viewport(0, 0, width, height)\n    gl.drawArrays(gle.TRIANGLE_STRIP, 0, 4)\n\n    // read from framebuffer\n    gl.readPixels(0, 0, width, height, gle.RED, gle.FLOAT, this.indices)\n\n    // disable framebuffer\n    gl.bindFramebuffer(gle.FRAMEBUFFER, null)\n\n    for (let i = 0; i < this.indices.length;) {\n      const slice = this.indices.subarray(i, i += width)\n      const codes = Array.from(slice, i => charMap[i])\n      yield str(...codes)\n    }\n  }\n}\n"],"names":["gle.COMPILE_STATUS","gle.LINK_STATUS","gle.ARRAY_BUFFER","gle.TEXTURE_2D","gle.FRAMEBUFFER","gle.TEXTURE_MIN_FILTER","gle.NEAREST","gle.TEXTURE_MAG_FILTER","gle.STATIC_DRAW","gle.FLOAT","glu.api","glu.framebuffer","glu.texture","glu.shader","gle.VERTEX_SHADER","gle.FRAGMENT_SHADER","glu.program","glu.buffer","glu.uniforms","gle.TEXTURE0","gle.R32F","gle.RED","gle.RGBA","gle.UNSIGNED_BYTE","gle.COLOR_ATTACHMENT0","gle.TRIANGLE_STRIP"],"mappings":";;;;;;IAMO,UAAU,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,GAAG,QAAQ,EAAE,IAAI,GAAG,CAAC,EAAE;IAC7D,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,IAAI;IAC3C,QAAQ,MAAM,CAAC,CAAC;IAChB,CAAC;;ICTM,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AACpC,IAAO,MAAM,SAAS,GAAG,MAAM,CAAC;AAChC,IAEO,MAAM,KAAK,GAAG,CAAC,MAAM,KAAK;IACjC,IAAI,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;IAC5B,IAAI,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,SAAS,EAAE,CAAC,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;IAClF,QAAQ,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACvE,IAAI,OAAO,KAAK,CAAC;IACjB,CAAC,CAAC;;ICRK,MAAM,SAAS,GAAG,CAAC,GAAG,UAAU,KAAK,CAAC,GAAG,QAAQ,KAAK,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC;AACvI,IAAO,MAAM,OAAO,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG,UAAU,KAAK,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,CAAC;;ICApG,MAAM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAA;AACtC,IAAO,MAAM,GAAG,GAAG,CAAC,GAAW,KAAK,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AAGrD,IAAO,MAAM,UAAU,GAAG,CAAC,IAAY;QACrC,MAAM,GAAG,GAAG,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,IAAI,EAAE,EAAE,CAAC,CAAA;QAChD,MAAM,GAAG,GAAG,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAA;QAChC,OAAO,CAAC,IAAY,KAAK,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,CAAA;IACpE,CAAC,CAAA;;ICPM,MAAM,OAAO,GAAG,GAAG;IAExB,GAAG,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;IACpB,GAAG,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;IAGpB,GAAG,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;IACpB,GAAG,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;IACpB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IAG1D,GAAG,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC;IACxB,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;KACvC,CAAA;AAED,IAAO,MAAM,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAA;AAC5D,IAAO,MAAM,KAAK,GAAM,OAAO,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAA;;;;;;;;;ICnBrD,MAAM,GAAG,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,OAAO,GAAG,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,GAAG,KAAK,IAAI,KAAK,KAAK,GAAG,CAAC;;ICAvF,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;;ICIjS,MAAM,GAAG,GAAG,CAAC,CAAS,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;AASrD,IAAO,MAAM,OAAO,GAAG,CAAC,GAAW,KACjC,GAAG,YAAY,wBAAwB;UACnC,GAAG,CAAC,MAAM;UACV,GAAG,CAAA;AAET,IAAO,MAAM,MAAM,GAAG,CAAC,GAAW,EAAE,CAAS,EAAE,CAAS;QACtD,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAA;QACzB,IAAI,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,GAAI,CAAC,GAAG,CAAC,CAAC,CAAA;QACrC,IAAI,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;QAErC,MAAM,GAAG,GAAG,SAAS,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,EAAE,CAAA;QAClD,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;QAEjC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE;YACtB,OAAO,GAAG,CAAA;QAEZ,KAAK,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC;YAC3C,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAA;QAErE,MAAM,GAAG,GAAG,SAAS,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAA;QAChD,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;QAC/B,OAAO,GAAG,CAAA;IACZ,CAAC,CAAA;;UCtBY,YAAY,GAAG,CAAC,QAAgB,EAAE,QAAkB;QAC/D,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,QAAQ,CAAA;QAC3E,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,QAAQ,CAAA;QAExE,MAAM,SAAS,GAAK,UAAU,GAAC,CAAC,GAAG,QAAQ,CAAA;QAC3C,MAAM,UAAU,GAAI,UAAU,GAAC,CAAC,GAAG,SAAS,CAAA;QAE5C,MAAM,UAAU,GAAI,KAAK,CAAC,SAAS,GAAI,QAAQ,GAAI,SAAS,CAAC,CAAA;QAC7D,MAAM,WAAW,GAAG,KAAK,CAAC,UAAU,GAAG,SAAS,GAAG,UAAU,CAAC,CAAA;QAE9D,MAAM,GAAG,GAAG,SAAS,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,EAAE,CAAA;QACnE,MAAM,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAA;QAE1B,GAAG,CAAC,SAAS,WAAgB;QAC7B,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,WAAW,CAAC,CAAA;QAE3C,GAAG,CAAC,SAAS,CAAC,UAAU,GAAC,CAAC,EAAE,WAAW,GAAC,CAAC,CAAC,CAAA;QAC1C,GAAG,CAAC,SAAS,WAAmB;QAChC,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAS,GAAC,CAAC,EAAE,CAAC,UAAU,GAAC,CAAC,EAAE,SAAS,EAAE,UAAU,CAAC,CAAA;QAEhE,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,IAAE,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAA;QAC7C,GAAG,CAAC,SAAS,WAAmB;QAChC,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAA;QACxB,GAAG,CAAC,IAAI,GAAG,GAAG,UAAU,MAAM,UAAU,EAAE,CAAA;QAE1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;YAC/D,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAA;YAC3B,GAAG,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,KAAG,SAAS,CAAA;YAC7C,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;SACzB;QAED,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAA;QACxC,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,EAAE,SAAS,EAAE,UAAU,CAAC;aAC5C,YAAY,CAAC,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,CAAC;aACzD,IAAI,CAAA;QAEP,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE;YACjC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAE,QAAQ,CAAA;QAE7C,OAAO,GAAG,CAAA;IACZ,CAAC,CAAA;AAED,UAAa,OAAO,GAAG,CAAC,GAAG,IAAW;QACpC,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAA;QAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;QAC1B,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;QAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE;YAC7B,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAC,KAAK,CAAC,CAAA;QAE3B,OAAO,GAAG,CAAA;IACZ,CAAC,CAAA;AAED,UAAa,GAAI,SAAQ,YAAY;QACnC,YAAmB,KAAa,EAAS,MAAc;YACrD,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,CAAA;YADJ,UAAK,GAAL,KAAK,CAAQ;YAAS,WAAM,GAAN,MAAM,CAAQ;SAEtD;QAED,SAAS,CAAC,GAAW,EAAE,GAAW;YAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;gBAClC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,CAAA;SAC1C;QAED,OAAO,CAAC,KAAwB;YAC9B,IAAI,GAAG,GAAG,CAAC,CAAA;YAEX,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;gBAC3B,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;YAEhC,OAAO,GAAG,CAAA;SACX;KACF;;UClFY,QAAQ;QAArB;YACE,YAAO,GAAM,KAAK,CAAA;YAElB,eAAU,GAAG,WAAW,CAAA;YACxB,aAAQ,GAAK,IAAI,CAAA;YACjB,cAAS,GAAI,EAAE,CAAA;YACf,eAAU,GAAG,EAAE,CAAA;YACf,aAAQ,GAAK,CAAC,CAAA;YACd,cAAS,GAAI,GAAG,CAAA;YAEhB,aAAQ,GAAK,CAAC,CAAA;YACd,cAAS,GAAI,CAAC,CAAA;YACd,eAAU,GAAG,CAAC,CAAA;YACd,WAAM,GAAO,GAAG,CAAA;YAChB,WAAM,GAAO,GAAG,CAAA;YAChB,aAAQ,GAAK,GAAG,CAAA;YAEhB,eAAU,GAAG,GAAG,CAAA;YAChB,UAAK,GAAQ,GAAG,CAAA;YAChB,UAAK,GAAQ,GAAG,CAAA;SACjB;KAAA;;UCdqB,QAAQ;QAO5B,YAAY,QAA4B;YAF/B,aAAQ,GAAG,IAAI,QAAQ,CAAA;YAG9B,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAS,CAAC,CAAA;YAEnC,IAAI,CAAC,GAAG,GAAG,SAAS,EAAE,EAAE,CAAA;YACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,CAAA;YACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAA;SAC5B;QAEO,WAAW;YACjB,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAA;YAE7C,MAAM,SAAS,GAAG,CAAC,GAAG,OAAO,CAAC;iBAC3B,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;iBAC9B,GAAG,CAAC,GAAG,CAAC,CAAA;YAEX,OAAO,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;SACnC;QAEO,QAAQ;YACd,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAA;YAClC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,QAAQ,CAAA;YAEnC,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,YAAY,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAA;YAClE,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;YAE3D,KAAK,MAAM,GAAG,IAAI,IAAI;gBACpB,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC,CAAA;YAE7C,OAAO,IAAI,CAAA;SACZ;QAED,MAAM,CAAC,GAAW,EAAE,KAAa,EAAE,MAAc;YAC/C,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;SACpE;KAGF;;UCtCY,WAAY,SAAQ,QAAQ;QACvC,CAAC,KAAK,CAAC,GAAW,EAAE,KAAa,EAAE,MAAc;YAC/C,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAA;YACxC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAA;YAElE,MAAM,QAAQ,GAAI,QAAQ,GAAI,KAAK,CAAA;YACnC,MAAM,SAAS,GAAG,SAAS,GAAG,MAAM,CAAA;YACpC,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAA;YAE7C,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,IAAI,CAAA;YAC9D,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,QAAQ,GAAG,SAAS,CAAC,CAAA;YAErD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,IAAI,SAAS,EAAE;gBAC7C,MAAM,KAAK,GAAG,EAAE,CAAA;gBAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,IAAI,QAAQ,EAAE;oBAC3C,IAAI,KAAK,GAAG,CAAC,CAAA;oBACb,IAAI,KAAK,GAAG,QAAQ,CAAA;oBAEpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;wBAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;4BACjC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,IAAI,CAAC,CAAC,GAAC,CAAC,IAAE,QAAQ,IAAI,CAAC,CAAA;4BAEnC,MAAM,CAAC,GAAG,UAAM,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAA;4BACrC,MAAM,CAAC,GAAG,UAAM,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAA;4BACrC,MAAM,CAAC,GAAG,UAAM,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAA;4BAErC,MAAM,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAG,KAAK,CAAA;4BACzC,MAAM,CAAC,GAAG,KAAK,IAAI,MAAM,EAAE,GAAG,GAAG,CAAC,CAAA;4BAElC,MAAM,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;yBACxB;qBACF;oBAED,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG;wBAC9B,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;wBAErC,IAAI,KAAK,GAAG,KAAK,EAAE;4BACjB,KAAK,GAAG,KAAK,CAAA;4BACb,KAAK,GAAG,CAAC,CAAA;yBACV;qBACF;oBAED,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAA;iBAC3B;gBAED,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,CAAA;aACpB;SACF;KACF;;IC5DM,MAAM,MAAM,GAAG,CAAC,IAAI,EAAE,OAAO,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;;;ACE/I,IAUA,cAAc,GAAG,MAAM,EACvB,AAuDA,YAAY,GAAG,MAAM,EACrB,AAKA,WAAW,GAAG,MAAM,EACpB,AAiHA,aAAa,GAAG,MAAM,EACtB,AAIA,KAAK,GAAG,MAAM;AAGd,IAGA,IAAI,GAAG,MAAM,EACb,AAUA,eAAe,GAAG,MAAM,EACxB,aAAa,GAAG,MAAM,EACtB,AASA,WAAW,GAAG,MAAM,EACpB,AAiCA,OAAO,GAAG,MAAM,EAChB,AAWA,kBAAkB,GAAG,MAAM,EAC3B,kBAAkB,GAAG,MAAM,EAC3B,AAIA,UAAU,GAAG,MAAM,EACnB,AAaA,QAAQ,GAAG,MAAM,EACjB,AAqEA,cAAc,GAAG,MAAM;AAGvB,IAQA,WAAW,GAAG,MAAM,EACpB,AAwBA,iBAAiB,GAAG,MAAM;;UC9X1B,GAAG,GAAG,MAAM,EACZ,AA2KA,IAAI,GAAG,MAAM;;IChLN,MAAM,GAAG,GAAG,CAAC,UAAmC,EAAE,GAAG,UAAoB;QAC9E,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAA;QAClC,MAAM,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAA;QAElD,IAAI,CAAC,EAAE;YACL,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAA;QAE5C,KAAK,MAAM,GAAG,IAAI,UAAU;YAC1B,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC;gBACvB,MAAM,IAAI,KAAK,CAAC,IAAI,GAAG,8BAA8B,CAAC,CAAA;QAE1D,OAAO,EAAE,CAAA;IACX,CAAC,CAAA;AAED,IAAO,MAAM,MAAM,GAAG,CAAC,EAA0B,EAAE,IAAY,EAAE,MAAc;QAC7E,MAAM,OAAO,GAAG,mBAAmB,GAAG,MAAM,CAAA;QAC5C,MAAM,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAE,CAAA;QAErC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;QAChC,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;QAExB,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,MAAM,EAAEA,cAAkB,CAAC;YACpD,MAAM,IAAI,KAAK,CAAC,kBAAkB,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;QAE7F,OAAO,MAAM,CAAA;IACf,CAAC,CAAA;AAED,IAAO,MAAM,OAAO,GAAG,CAAC,EAA0B,EAAE,IAAiB,EAAE,IAAiB;QACtF,MAAM,OAAO,GAAG,EAAE,CAAC,aAAa,EAAG,CAAA;QAEnC,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;QAC9B,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;QAC9B,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;QAEvB,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAEC,WAAe,CAAC;YACnD,MAAM,IAAI,KAAK,CAAC,kBAAkB,EAAE,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;QAEpE,OAAO,OAAO,CAAA;IAChB,CAAC,CAAA;AAED,IAKO,MAAM,MAAM,GAAyB,CAAC,EAAE,EAAE,MAAM,GAAGC,YAAgB;QACxE,MAAM,MAAM,GAAG,EAAE,CAAC,YAAY,EAAG,CAAA;QACjC,OAAO,OAAO,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,IAAI,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAA;IACrE,CAAC,CAAA;AAED,IAAO,MAAM,OAAO,GAA0B,CAAC,EAAE,EAAE,MAAM,GAAGC,UAAc;QACxE,MAAM,MAAM,GAAG,EAAE,CAAC,aAAa,EAAG,CAAA;QAClC,OAAO,OAAO,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,IAAI,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAA;IACtE,CAAC,CAAA;AAED,IAAO,MAAM,WAAW,GAA8B,CAAC,EAAE,EAAE,MAAM,GAAGC,WAAe;QACjF,MAAM,MAAM,GAAG,EAAE,CAAC,iBAAiB,EAAG,CAAA;QACtC,OAAO,OAAO,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,IAAI,EAAE,CAAC,eAAe,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAA;IAC1E,CAAC,CAAA;AAED,IAAO,MAAM,QAAQ,GAAG,CAAC,EAA0B,EAAE,OAAqB,KACxE,CAAC,IAAY,KAAK,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;IAIxD,MAAM,OAAO,GAAG,CAAC,IAAY,EAAE,KAAa,KAC1C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,CAAA;IAEjD,MAAM,WAAW,GAAG,CAAC,MAAc,EAAE,CAAC,GAAG,CAAC,KACxC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,IAAI,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,CAAA;IAEhE,MAAM,OAAO,GAAG,CAAI,EAA0B,EAAE,MAAS,EAAE,IAAe,KACxE,EAAE,KAAK,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAA;;;;;ICjElE,MAAM,aAAa,GAAiB,EAAE;QACpC,EAAE,CAAC,aAAa,CAACD,UAAc,EAAEE,kBAAsB,EAAEC,OAAW,CAAC,CAAA;QACrE,EAAE,CAAC,aAAa,CAACH,UAAc,EAAEI,kBAAsB,EAAED,OAAW,CAAC,CAAA;IACvE,CAAC,CAAA;IAED,MAAM,YAAY,GAAG,CAAC,KAAa,KAAmB,EAAE;QACtD,MAAM,IAAI,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QACxD,EAAE,CAAC,UAAU,CAACJ,YAAgB,EAAE,IAAI,EAAEM,WAAe,CAAC,CAAA;QACtD,EAAE,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC,EAAEC,KAAS,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;QACxD,EAAE,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAA;IACnC,CAAC,CAAA;AAED,UAAa,WAAY,SAAQ,QAAQ;QAavC,YAAY,QAA4B;YACtC,KAAK,CAAC,QAAQ,CAAC,CAAA;YAVA,OAAE,GAAOC,GAAO,CAAC,EAAE,EAAE,wBAAwB,CAAC,CAAA;YAC9C,QAAG,GAAMC,WAAe,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAA;YACnC,UAAK,GAAIC,OAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAA;YAC5C,UAAK,GAAIA,OAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAA;YAC5C,WAAM,GAAGA,OAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAA;YAE5C,QAAG,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;YACpC,YAAO,GAAG,IAAI,YAAY,EAAE,CAAA;YAKlC,MAAM,KAAK,GAAIC,MAAU,CAAC,IAAI,CAAC,EAAE,EAAEC,aAAiB,EAAI,MAAM,CAAC,MAAM,EAAG,IAAI,CAAC,CAAC,CAAA;YAC9E,MAAM,MAAM,GAAGD,MAAU,CAAC,IAAI,CAAC,EAAE,EAAEE,eAAmB,EAAE,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAA;YAC9E,MAAM,MAAM,GAAGF,MAAU,CAAC,IAAI,CAAC,EAAE,EAAEE,eAAmB,EAAE,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAA;YAE9E,IAAI,CAAC,KAAK,GAAGC,OAAW,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;YAChD,IAAI,CAAC,KAAK,GAAGA,OAAW,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;YAEhDC,MAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,IAAoB,CAAC,CAAA;SACtD;QAED,CAAC,KAAK,CAAC,GAAW,EAAE,KAAa,EAAE,MAAc;YAC/C,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAA;YAEpF,MAAM,QAAQ,GAAI,QAAQ,CAAC,QAAQ,GAAI,KAAK,CAAA;YAC5C,MAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,GAAG,MAAM,CAAA;YAC7C,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAA;YAE7C,MAAM,MAAM,GAAGC,QAAY,CAAC,EAAE,EAAE,KAAK,CAAC,CAAA;YACtC,MAAM,MAAM,GAAGA,QAAY,CAAC,EAAE,EAAE,KAAK,CAAC,CAAA;YAEtC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,KAAK,GAAG,MAAM;gBACxC,IAAI,CAAC,OAAO,GAAG,IAAI,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC,CAAA;YAGjD,EAAE,CAAC,eAAe,CAACd,WAAe,EAAE,GAAG,CAAC,CAAA;YAGxC,EAAE,CAAC,aAAa,CAACe,QAAY,MAAe,CAAA;YAC5C,EAAE,CAAC,WAAW,CAAChB,UAAc,EAAE,KAAK,CAAC,CAAA;YACrC,EAAE,CAAC,UAAU,CAACA,UAAc,EAAE,CAAC,EAAEiB,IAAQ,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,EAAEC,GAAO,EAAEZ,KAAS,EAAE,GAAG,CAAC,CAAA;YAE7F,EAAE,CAAC,aAAa,CAACU,QAAY,MAAe,CAAA;YAC5C,EAAE,CAAC,WAAW,CAAChB,UAAc,EAAE,KAAK,CAAC,CAAA;YACrC,EAAE,CAAC,UAAU,CAACA,UAAc,EAAE,CAAC,EAAEmB,IAAQ,EAAEA,IAAQ,EAAEC,aAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;YAEpF,EAAE,CAAC,aAAa,CAACJ,QAAY,MAAe,CAAA;YAC5C,EAAE,CAAC,WAAW,CAAChB,UAAc,EAAE,MAAM,CAAC,CAAA;YACtC,EAAE,CAAC,UAAU,CAACA,UAAc,EAAE,CAAC,EAAEiB,IAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAEC,GAAO,EAAEZ,KAAS,EAAE,IAAI,CAAC,CAAA;YAC5F,EAAE,CAAC,oBAAoB,CAACL,WAAe,EAAEoB,iBAAqB,EAAErB,UAAc,EAAE,MAAM,EAAE,CAAC,CAAC,CAAA;YAE1F,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;YACpB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,KAAc,CAAA;YACzC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAA;YACxD,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAA;YAC9C,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAA;YAC9C,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;YAC9C,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAA;YACtC,EAAE,CAAC,UAAU,CAACsB,cAAkB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;YAGvC,EAAE,CAAC,aAAa,CAACN,QAAY,MAAe,CAAA;YAC5C,EAAE,CAAC,WAAW,CAAChB,UAAc,EAAE,MAAM,CAAC,CAAA;YAEtC,EAAE,CAAC,aAAa,CAACgB,QAAY,MAAe,CAAA;YAC5C,EAAE,CAAC,WAAW,CAAChB,UAAc,EAAE,KAAK,CAAC,CAAA;YACrC,EAAE,CAAC,UAAU,CAACA,UAAc,EAAE,CAAC,EAAEiB,IAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAEC,GAAO,EAAEZ,KAAS,EAAE,IAAI,CAAC,CAAA;YAC5F,EAAE,CAAC,oBAAoB,CAACL,WAAe,EAAEoB,iBAAqB,EAAErB,UAAc,EAAE,KAAK,EAAE,CAAC,CAAC,CAAA;YAEzF,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;YACpB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,KAAc,CAAA;YACzC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,KAAc,CAAA;YACzC,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;YAChC,EAAE,CAAC,UAAU,CAACsB,cAAkB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;YAGvC,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAEJ,GAAO,EAAEZ,KAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;YAGpE,EAAE,CAAC,eAAe,CAACL,WAAe,EAAE,IAAI,CAAC,CAAA;YAEzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG;gBACxC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,CAAA;gBAClD,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;gBAChD,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,CAAA;aACpB;SACF;KACF;;;;;;;;;;;;;;;;;;;"}