function*t(t=0,n=1/0,i=1){for(let s=t;n>s;s+=i)yield s}const n=Object.assign,i=(...t)=>(...i)=>n(s("canvas")(...t).getContext("2d"),...i),s=t=>(...i)=>n(document.createElement(t),...i),e=String.fromCharCode,r=t=>t.charCodeAt(0),o=(t,n={},i="$")=>Function(`{${Object.keys(n)}}`,i,`return \`${t}\``)(n,n),a=t=>{const n=i()({font:`1em ${t}`}),s=n.measureText(" ");return t=>n.measureText(t).width===s.width},h=e(...t(32,95),...t(96,127),...t(161,168),...t(174,178),169,171,172,180,181,183,187,191,215,247,...t(8216,8227),8249,8250,8729,8730,8734),l=h.replace(/[^\x00-\xff]/g,""),c=h.replace(/[^\x00-\x7f]/g,""),u={__proto__:null,unicode:h,extended:l,ascii:c},f=t=>t>.04045?((t+.055)/1.055)**2.4:t/12.92,{abs:v,clz32:d,floor:m,max:x,random:p,round:g}=Math,_=t=>1<<x(0,31-d(t)),y=(t,n,s)=>{const e=(t=>t instanceof CanvasRenderingContext2D?t.canvas:t)(t);let r=n*_(e.width/n-1),o=s*_(e.height/s-1);const a=i({width:r,height:o})();if(a.drawImage(e,0,0,r,o),n===r&&s===o)return a;for(let t,i;t=r>n,i=o>s,t||i;)a.drawImage(a.canvas,0,0,r,o,0,0,r>>=+t,o>>=+i);const h=i({width:n,height:s})();return h.drawImage(a.canvas,0,0),h};class w extends Float32Array{constructor(t,n){super(t*n),this.width=t,this.height=n}static fromCharCode(t,n){const{fontWidth:s,fontHeight:r,fontFamily:o,fontBlur:a,fontGamma:h}=n,{fontBase:l,lutWidth:c,lutHeight:u,lutPadding:v,lutGamma:d}=n,m=2*v+c,x=2*v+u,p=g(m/c*s),_=g(x/u*r),$=i({width:p,height:_})(),b=e(t);$.fillStyle="#00f",$.fillRect(0,0,p,_),$.translate(p/2,_/2),$.fillStyle="#000",$.fillRect(-s/2,-r/2,s,r),$.translate(0,r*(.5-l)),$.fillStyle="#fff",$.textAlign="center",$.font=`${r}px ${o}`;for(let t=0,n=1,i=1;a>t;[n,i]=[i,i+n])$.filter=`blur(${i}px)`,$.globalAlpha=(++t/a)**h,$.fillText(b,0,0);const F=new w(c,u),M=y($,m,x).getImageData(v,v,c,u).data;for(let t=0;F.length>t;t++)F[t]=f(M[t<<2]/255)**d;return F}static combine(t){const n=t[0].length,i=t.length,s=new w(n,i);for(let e=0;i>e;e++)s.set(t[e],e*n);return s}normalize(t,n){for(let i=0;this.length>i;i++)this[i]=(this[i]-t)/(n-t)}compare(t){let n=0;for(let i=this.length;i--;)n+=v(this[i]-t[i]);return n}}class ${constructor(){this.charSet=c,this.fontFamily="monospace",this.fontBase=.25,this.fontWidth=40,this.fontHeight=70,this.fontBlur=9,this.fontGamma=1,this.lutWidth=5,this.lutHeight=7,this.lutPadding=1,this.lutMin=0,this.lutMax=1,this.lutGamma=1,this.brightness=1,this.gamma=1,this.noise=0}}class b{constructor(t){this.settings=new $,n(this.settings,t),this.t=this.i(),this.s=this.o()}i(){const{charSet:t,fontFamily:n}=this.settings,i=[...t].filter(a(n)).map(r);return Int32Array.from(i)}o(){const{t,settings:n}=this,{lutMin:i,lutMax:s}=n,e=Array.from(t,t=>w.fromCharCode(t,n)),r=e.reduce((t,n)=>x(t,...n),0);for(const t of e)t.normalize(i*r,s*r);return e}render(t,n,i){return[...this.lines(t,m(n),m(i))].join("\n")}}class F extends b{*lines(t,n,i){const{settings:s,t:r,s:o}=this,{lutWidth:a,lutHeight:h,brightness:l,gamma:c,noise:u}=s,v=a*n,d=h*i,m=y(t,v,d).getImageData(0,0,v,d).data,x=new Float32Array(a*h);for(let t=0;d>t;t+=h){const n=[];for(let i=0;v>i;i+=a){let s=0,e=1/0;for(let n=0;h>n;n++)for(let e=0;a>e;e++){let r=i+e+(t+n)*v<<2;const o=l*(.2126*f(m[r++]/255)+.7152*f(m[r++]/255)+.0722*f(m[r++]/255))**c,a=u*(p()-.5);x[s++]=o+a}for(let t=o.length;t--;){const n=o[t].compare(x);e>n&&(e=n,s=t)}n.push(r[s])}yield e(...n)}}}const M=5,P=5121,C=5126,S=6408,U=35632,R=35633,A=3553,G=33984,L=36160,B=36064,z=6403,E=33326,T=(t,...n)=>{const i=s("canvas")().getContext("webgl2",t);if(!i)throw Error("WebGL2 is not available");for(const t of n)if(!i.getExtension(t))throw Error(`"${t}" extension is not available`);return i},X=(t,n,i)=>{const s=`#version 300 es\n${i}`,e=t.createShader(n);if(t.shaderSource(e,s),t.compileShader(e),!t.getShaderParameter(e,35713))throw Error(`Shader error:\n${t.getShaderInfoLog(e)}\n${V(s)}\n`);return e},D=(t,n,i)=>{const s=t.createProgram();if(t.attachShader(s,n),t.attachShader(s,i),t.linkProgram(s),!t.getProgramParameter(s,35714))throw Error(`Program error: ${t.getProgramInfoLog(s)}`);return s},W=(t,n=34962)=>{const i=t.createBuffer();return Y(t,i,i=>t.bindBuffer(n,i))},H=(t,n=A)=>{const i=t.createTexture();return Y(t,i,i=>t.bindTexture(n,i))},N=(t,n=L)=>{const i=t.createFramebuffer();return Y(t,i,i=>t.bindFramebuffer(n,i))},O=(t,n)=>i=>t.getUniformLocation(n,i),V=(t,n=1)=>t.replace(/^/gm,()=>`${n++}: `.padStart(5,"0")),Y=(t,n,i)=>s=>(s&&(i(n),s(t,n),i(null)),n),j="in vec2 aPosition;\nout vec2 vPosition;\nvoid main() {\nvPosition = 0.5 + 0.5*aPosition;\ngl_Position = vec4(aPosition, 0., 1.);\n}\n",k="#define MAP3(f, v) vec3(f(v.x), f(v.y), f(v.z))\n#define RGB(x) mix(x/12.92, pow((x+.055)/1.055, 2.4), step(.04045, x))\n#define LUM(x) dot(x, vec3(.2126, .7152, .0722))\nprecision mediump float;\nuniform sampler2D uSrc;\nuniform float uBrightness;\nuniform float uGamma;\nuniform float uNoise;\nuniform float uRandom;\nin vec2 vPosition;\nout vec4 vFragColor;\nfloat hash13(vec3 p3) {\np3 = fract(p3 * 0.1031);\np3 += dot(p3, p3.yzx + 19.19);\nreturn fract((p3.x + p3.y) * p3.z);\n}\nvoid main() {\nvec3 srgb = texture(uSrc, vPosition).rgb;\nfloat signal = uBrightness * pow(LUM(MAP3(RGB, srgb)), uGamma);\nfloat noise = uNoise * (hash13(vec3(gl_FragCoord.xy, 1000.*uRandom)) - 0.5);\nvFragColor = vec4(vec3(clamp(signal + noise, 0., 1.)), 0.);\n}\n",I="#define U ${ width }\n#define V ${ height }\n#define X ${ width * height }\n#define Y ${ chars }\nprecision mediump float;\nuniform sampler2D uSrc;\nuniform sampler2D uLUT;\nuniform int uCharMap[Y];\nin vec2 vPosition;\nout vec4 vFragColor;\nstruct Result {\nint index;\nfloat value;\n};\nvoid main() {\nResult res = Result(0, float(X));\nivec2 pos = ivec2(vec2(textureSize(uSrc, 0))*vPosition) - ivec2(U, V)/2;\nfloat src[X];\nfor (int v = 0; v < V; v++)\nfor (int u = 0; u < U; u++)\nsrc[u + v*U] = texelFetch(uSrc, pos + ivec2(u, v), 0).r;\nfor (int y = 0; y < Y; y++) {\nfloat value = 0.;\nfor (int x = 0; x < X; x++)\nvalue += abs(src[x] - texelFetch(uLUT, ivec2(x, y), 0).r);\nif (res.value > value)\nres = Result(y, value);\n}\nvFragColor = vec4(uCharMap[res.index], 0, 0, 0);\n}\n",q=t=>{t.texParameteri(A,10241,9728),t.texParameteri(A,10240,9728)},J=t=>n=>{const i=Float32Array.of(1,1,-1,1,1,-1,-1,-1);n.bufferData(34962,i,35044),n.vertexAttribPointer(t,2,C,!1,0,0),n.enableVertexAttribArray(t)};class K extends b{constructor(t){super(t),this.h=T({},"EXT_color_buffer_float"),this.l=N(this.h)(),this.u=H(this.h)(q),this.v=H(this.h)(q),this.m=H(this.h)(q),this.p=w.combine(this.s),this.g=new Float32Array;const n=X(this.h,R,j),i=X(this.h,U,k),s=X(this.h,U,o(I,{chars:this.t.length,width:this.settings.lutWidth,height:this.settings.lutHeight}));this._=D(this.h,n,i),this.$=D(this.h,n,s),W(this.h)(J(0))}*lines(t,n,i){const{settings:s,t:r,p:o,h:a,_:h,$:l,l:c,u,v:f,m:v}=this,d=s.lutWidth*n,m=s.lutHeight*i,x=y(t,d,m),p=O(a,h),g=O(a,l);this.g.length!==n*i&&(this.g=new Float32Array(n*i)),a.bindFramebuffer(L,c),a.activeTexture(G+2),a.bindTexture(A,u),a.texImage2D(A,0,E,o.width,o.height,0,z,C,o),a.activeTexture(G+1),a.bindTexture(A,f),a.texImage2D(A,0,S,S,P,x.canvas),a.activeTexture(G+0),a.bindTexture(A,v),a.texImage2D(A,0,E,d,m,0,z,C,null),a.framebufferTexture2D(L,B,A,v,0),a.useProgram(h),a.uniform1i(p("uSrc"),1),a.uniform1f(p("uBrightness"),s.brightness),a.uniform1f(p("uGamma"),s.gamma),a.uniform1f(p("uNoise"),s.noise),a.uniform1f(p("uRandom"),Math.random()),a.viewport(0,0,d,m),a.drawArrays(M,0,4),a.activeTexture(G+1),a.bindTexture(A,v),a.activeTexture(G+0),a.bindTexture(A,f),a.texImage2D(A,0,E,d,m,0,z,C,null),a.framebufferTexture2D(L,B,A,f,0),a.useProgram(l),a.uniform1i(g("uSrc"),1),a.uniform1i(g("uLUT"),2),a.uniform1iv(g("uCharMap"),r),a.viewport(0,0,n,i),a.drawArrays(M,0,4),a.readPixels(0,0,n,i,z,C,this.g),a.bindFramebuffer(L,null);for(let t=0;this.g.length>t;)yield e(...this.g.subarray(t,t+=n))}}export{F as CPURenderer,K as GPURenderer,w as LUT,b as Renderer,$ as Settings,u as charSets};
//# sourceMappingURL=bundle.esm.min.js.map
