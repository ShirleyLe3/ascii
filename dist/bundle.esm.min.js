const t=Object.assign,n=(...n)=>(...i)=>t(s("canvas")(...n).getContext("2d"),...i),s=n=>(...s)=>t(document.createElement(n),...s),i=String.fromCharCode,r=t=>t.charCodeAt(0),e=(t,n={},s="$")=>Function(`{${Object.keys(n)}}`,s,`return \`${t}\``)(n,n),o=t=>{const s=n()({font:`1em ${t}`}),i=s.measureText(" ");return t=>s.measureText(t).width===i.width},a=t=>{const[n,s]=[...t].map(r),e=[...Array(s-n).keys()].map(t=>n+t);return i(...e,s)},h=a(" ^")+a("`~"),c=h+a("¡§")+"®°±©«¬´µ·»¿×÷",l=c+a("‘•")+"‹›∙√∞",u={__proto__:null,ascii:h,extended:c,extra:l},f=t=>t>.04045?((t+.055)/1.055)**2.4:t/12.92,{abs:v,clz32:m,floor:d,max:p,random:x,round:g}=Math,_=t=>1<<p(0,31-m(t)),y=(t,s,i)=>{const r=(t=>t instanceof CanvasRenderingContext2D?t.canvas:t)(t);let e=s*_(r.width/s-1),o=i*_(r.height/i-1);const a=n({width:e,height:o})();if(a.drawImage(r,0,0,e,o),s===e&&i===o)return a;for(let t,n;t=e>s,n=o>i,t||n;)a.drawImage(a.canvas,0,0,e,o,0,0,e>>=+t,o>>=+n);const h=n({width:s,height:i})();return h.drawImage(a.canvas,0,0),h};class w extends Float32Array{constructor(t,n){super(t*n),this.width=t,this.height=n}static fromCharCode(t,s){const{fontWidth:r,fontHeight:e,fontFamily:o,fontBlur:a,fontGamma:h}=s,{fontBase:c,lutWidth:l,lutHeight:u,lutPadding:v,lutGamma:m}=s,d=2*v+l,p=2*v+u,x=g(d/l*r),_=g(p/u*e),b=n({width:x,height:_})(),$=i(t);b.fillStyle="#00f",b.fillRect(0,0,x,_),b.translate(x/2,_/2),b.fillStyle="#000",b.fillRect(-r/2,-e/2,r,e),b.translate(0,e*(.5-c)),b.fillStyle="#fff",b.textAlign="center",b.font=`${e}px ${o}`;for(let t=0,n=1,s=1;a>t;[n,s]=[s,s+n])b.filter=`blur(${s}px)`,b.globalAlpha=(++t/a)**h,b.fillText($,0,0);const F=new w(l,u),M=y(b,d,p).getImageData(v,v,l,u).data;for(let t=0;F.length>t;t++)F[t]=f(M[t<<2]/255)**m;return F}static combine(t){const n=t[0].length,s=t.length,i=new w(n,s);for(let r=0;s>r;r++)i.set(t[r],r*n);return i}normalize(t,n){for(let s=0;this.length>s;s++)this[s]=(this[s]-t)/(n-t)}compare(t){let n=0;for(let s=this.length;s--;)n+=v(this[s]-t[s]);return n}}class b{constructor(){this.charSet=h,this.fontFamily="monospace",this.fontBase=.25,this.fontWidth=40,this.fontHeight=70,this.fontBlur=9,this.fontGamma=1,this.lutWidth=5,this.lutHeight=7,this.lutPadding=1,this.lutMin=0,this.lutMax=1,this.lutGamma=1,this.brightness=1,this.gamma=1,this.noise=0}}class ${constructor(n){this.settings=new b,t(this.settings,n),this.t=this.s(),this.i=this.o()}s(){const{charSet:t,fontFamily:n}=this.settings,s=[...t].filter(o(n)).map(r);return Int32Array.from(s)}o(){const{t,settings:n}=this,{lutMin:s,lutMax:i}=n,r=Array.from(t,t=>w.fromCharCode(t,n)),e=r.reduce((t,n)=>p(t,...n),0);for(const t of r)t.normalize(s*e,i*e);return r}render(t,n,s){return[...this.lines(t,d(n),d(s))].join("\n")}}class F extends ${*lines(t,n,s){const{settings:r,t:e,i:o}=this,{lutWidth:a,lutHeight:h,brightness:c,gamma:l,noise:u}=r,v=a*n,m=h*s,d=y(t,v,m).getImageData(0,0,v,m).data,p=new Float32Array(a*h);for(let t=0;m>t;t+=h){const n=[];for(let s=0;v>s;s+=a){let i=0,r=1/0;for(let n=0;h>n;n++)for(let r=0;a>r;r++){let e=s+r+(t+n)*v<<2;const o=c*(.2126*f(d[e++]/255)+.7152*f(d[e++]/255)+.0722*f(d[e++]/255))**l,a=u*(x()-.5);p[i++]=o+a}for(let t=o.length;t--;){const n=o[t].compare(p);r>n&&(r=n,i=t)}n.push(e[i])}yield i(...n)}}}const M=5,P=5121,C=5126,S=6408,U=35632,A=35633,R=3553,G=33984,L=36160,B=36064,z=6403,E=33326,T=(t,...n)=>{const i=s("canvas")().getContext("webgl2",t);if(!i)throw Error("WebGL2 is not available");for(const t of n)if(!i.getExtension(t))throw Error(`"${t}" extension is not available`);return i},X=(t,n,s)=>{const i=`#version 300 es\n${s}`,r=t.createShader(n);if(t.shaderSource(r,i),t.compileShader(r),!t.getShaderParameter(r,35713))throw Error(`Shader error:\n${t.getShaderInfoLog(r)}\n${V(i)}\n`);return r},D=(t,n,s)=>{const i=t.createProgram();if(t.attachShader(i,n),t.attachShader(i,s),t.linkProgram(i),!t.getProgramParameter(i,35714))throw Error(`Program error: ${t.getProgramInfoLog(i)}`);return i},W=(t,n=34962)=>{const s=t.createBuffer();return Y(t,s,s=>t.bindBuffer(n,s))},H=(t,n=R)=>{const s=t.createTexture();return Y(t,s,s=>t.bindTexture(n,s))},N=(t,n=L)=>{const s=t.createFramebuffer();return Y(t,s,s=>t.bindFramebuffer(n,s))},O=(t,n)=>s=>t.getUniformLocation(n,s),V=(t,n=1)=>t.replace(/^/gm,()=>`${n++}: `.padStart(5,"0")),Y=(t,n,s)=>i=>(i&&(s(n),i(t,n),s(null)),n),j={base:"in vec2 aPosition;\nout vec2 vPosition;\nvoid main() {\nvPosition = 0.5 + 0.5*aPosition;\ngl_Position = vec4(aPosition, 0., 1.);\n}\n"},k={pass1:"#define MAP3(f, v) vec3(f(v.x), f(v.y), f(v.z))\n#define RGB(x) mix(x/12.92, pow((x+.055)/1.055, 2.4), step(.04045, x))\n#define LUM(x) dot(x, vec3(.2126, .7152, .0722))\nprecision mediump float;\nuniform sampler2D uSrc;\nuniform float uBrightness;\nuniform float uGamma;\nuniform float uNoise;\nuniform float uRandom;\nin vec2 vPosition;\nout vec4 vFragColor;\nfloat hash13(vec3 p3) {\np3 = fract(p3 * 0.1031);\np3 += dot(p3, p3.yzx + 19.19);\nreturn fract((p3.x + p3.y) * p3.z);\n}\nvoid main() {\nvec3 srgb = texture(uSrc, vPosition).rgb;\nfloat signal = uBrightness * pow(LUM(MAP3(RGB, srgb)), uGamma);\nfloat noise = uNoise * (hash13(vec3(gl_FragCoord.xy, 1000.*uRandom)) - 0.5);\nvFragColor = vec4(vec3(clamp(signal + noise, 0., 1.)), 0.);\n}\n",pass2:"#define U ${ width }\n#define V ${ height }\n#define X ${ width * height }\n#define Y ${ chars }\nprecision mediump float;\nuniform sampler2D uSrc;\nuniform sampler2D uLUT;\nuniform int uCharMap[Y];\nin vec2 vPosition;\nout vec4 vFragColor;\nstruct Result {\nint index;\nfloat value;\n};\nvoid main() {\nResult res = Result(0, float(X));\nivec2 pos = ivec2(vec2(textureSize(uSrc, 0))*vPosition) - ivec2(U, V)/2;\nfloat src[X];\nfor (int v = 0; v < V; v++)\nfor (int u = 0; u < U; u++)\nsrc[u + v*U] = texelFetch(uSrc, pos + ivec2(u, v), 0).r;\nfor (int y = 0; y < Y; y++) {\nfloat value = 0.;\nfor (int x = 0; x < X; x++)\nvalue += abs(src[x] - texelFetch(uLUT, ivec2(x, y), 0).r);\nif (res.value > value)\nres = Result(y, value);\n}\nvFragColor = vec4(uCharMap[res.index], 0, 0, 0);\n}\n"},I=t=>{t.texParameteri(R,10241,9728),t.texParameteri(R,10240,9728)},q=t=>n=>{const s=Float32Array.of(1,1,-1,1,1,-1,-1,-1);n.bufferData(34962,s,35044),n.vertexAttribPointer(t,2,C,!1,0,0),n.enableVertexAttribArray(t)};class J extends ${constructor(t){super(t),this.h=T({},"EXT_color_buffer_float"),this.l=N(this.h)(),this.u=H(this.h)(I),this.v=H(this.h)(I),this.m=H(this.h)(I),this.p=w.combine(this.i),this.g=new Float32Array;const n=X(this.h,A,j.base),s=X(this.h,U,k.pass1),i=X(this.h,U,e(k.pass2,{chars:this.t.length,width:this.settings.lutWidth,height:this.settings.lutHeight}));this._=D(this.h,n,s),this.$=D(this.h,n,i),W(this.h)(q(0))}*lines(t,n,s){const{settings:r,t:e,p:o,h:a,_:h,$:c,l,u,v:f,m:v}=this,m=r.lutWidth*n,d=r.lutHeight*s,p=y(t,m,d),x=O(a,h),g=O(a,c);this.g.length!==n*s&&(this.g=new Float32Array(n*s)),a.bindFramebuffer(L,l),a.activeTexture(G+2),a.bindTexture(R,u),a.texImage2D(R,0,E,o.width,o.height,0,z,C,o),a.activeTexture(G+1),a.bindTexture(R,f),a.texImage2D(R,0,S,S,P,p.canvas),a.activeTexture(G+0),a.bindTexture(R,v),a.texImage2D(R,0,E,m,d,0,z,C,null),a.framebufferTexture2D(L,B,R,v,0),a.useProgram(h),a.uniform1i(x("uSrc"),1),a.uniform1f(x("uBrightness"),r.brightness),a.uniform1f(x("uGamma"),r.gamma),a.uniform1f(x("uNoise"),r.noise),a.uniform1f(x("uRandom"),Math.random()),a.viewport(0,0,m,d),a.drawArrays(M,0,4),a.activeTexture(G+1),a.bindTexture(R,v),a.activeTexture(G+0),a.bindTexture(R,f),a.texImage2D(R,0,E,m,d,0,z,C,null),a.framebufferTexture2D(L,B,R,f,0),a.useProgram(c),a.uniform1i(g("uSrc"),1),a.uniform1i(g("uLUT"),2),a.uniform1iv(g("uCharMap"),e),a.viewport(0,0,n,s),a.drawArrays(M,0,4),a.readPixels(0,0,n,s,z,C,this.g),a.bindFramebuffer(L,null);for(let t=0;this.g.length>t;)yield i(...this.g.subarray(t,t+=n))}}export{F as CPURenderer,J as GPURenderer,w as LUT,$ as Renderer,b as Settings,u as charSets};
//# sourceMappingURL=bundle.esm.min.js.map
