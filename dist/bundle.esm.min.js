const t=Object.assign,n=(...n)=>(...r)=>t(e("canvas")(...n).getContext("2d"),...r),e=n=>(...e)=>t(document.createElement(n),...e),r=String.fromCharCode,i=t=>t.charCodeAt(0),o=t=>{const[n,e]=[...t].map(i),o=[...Array(e-n).keys()].map(t=>n+t);return r(...o,e)},s=o(" ^")+o("`~"),a=s+o("¡§")+"®°±©«¬´µ·»¿×÷",h={__proto__:null,ascii:s,extended:a,extra:a+o("‘•")+"‹›∙√∞"},u=t=>t>.04045?((t+.055)/1.055)**2.4:t/12.92,{abs:l,clz32:c,floor:f,max:v,random:m,round:d}=Math,g=t=>t instanceof CanvasRenderingContext2D?t.canvas:t,p=t=>1<<v(0,31-c(t)),x=(t,e,r)=>{const i=g(t);let o=e*p(i.width/e-1),s=r*p(i.height/r-1);const a=((t,e,r)=>{const i=n({width:e,height:r})();return i.drawImage(g(t),0,0,e,r),i})(t,o,s);if(e===o&&r===s)return a;for(let t,n;t=o>e,n=s>r,t||n;)a.drawImage(a.canvas,0,0,o,s,0,0,o>>=+t,s>>=+n);return((t,e,r,i,o)=>{const s=n({width:i,height:o})();return s.drawImage(g(t),e,r,i,o,0,0,i,o),s})(a,0,0,e,r)},_=(t,n,e)=>{const{width:r,height:i}=g(t);return n!==r||e!==i?x(t,n,e):t};class w extends Float32Array{constructor(t,n){super(t*n),this.width=t,this.height=n}static fromCharCode(t,e){const{fontWidth:i,fontHeight:o,fontFamily:s,fontBlur:a,fontGamma:h}=e,{fontBase:l,lutWidth:c,lutHeight:f,lutPadding:v,lutGamma:m}=e,g=2*v+c,p=2*v+f,_=d(g/c*i),y=d(p/f*o),b=n({width:_,height:y})(),$=r(t);b.fillStyle="#00f",b.fillRect(0,0,_,y),b.translate(_/2,y/2),b.fillStyle="#000",b.fillRect(-i/2,-o/2,i,o),b.translate(0,o*(.5-l)),b.fillStyle="#fff",b.textAlign="center",b.font=`${o}px ${s}`;for(let t=0,n=1,e=1;a>t;[n,e]=[e,e+n])b.filter=`blur(${e}px)`,b.globalAlpha=(++t/a)**h,b.fillText($,0,0);const M=new w(c,f),C=x(b,g,p).getImageData(v,v,c,f).data;for(let t=0;M.length>t;t++)M[t]=u(C[t<<2]/255)**m;return M}static combine(t){const n=t[0].length,e=t.length,r=new w(n,e);for(let i=0;e>i;i++)r.set(t[i],i*n);return r}normalize(t,n){for(let e=this.length;e--;)this[e]=(this[e]-t)/(n-t)}compare(t){let n=0;for(let e=this.length;e--;)n+=l(this[e]-t[e]);return n}}const y={charSet:s,fontFamily:"monospace",fontBase:.25,fontWidth:40,fontHeight:70,fontBlur:9,fontGamma:1,lutWidth:5,lutHeight:7,lutPadding:1,lutMin:0,lutMax:1,lutGamma:1,brightness:1,gamma:1,noise:0};class b{constructor(t){this.settings={...y,...t},this.t=this.i(),this.o=this.s()}i(){const{charSet:t,fontFamily:e}=this.settings,r=[...t].filter((t=>{const e=n()({font:`1em ${t}`}),r=e.measureText(" ");return t=>e.measureText(t).width===r.width})(e)).map(i);return Int32Array.from(r)}s(){const{t,settings:n}=this,{lutMin:e,lutMax:r}=n,i=Array.from(t,t=>w.fromCharCode(t,n)),o=i.reduce((t,n)=>v(t,...n),0);for(const t of i)t.normalize(e*o,r*o);return i}render(t,n,e){return[...this.lines(t,f(n),f(e))].join("\n")}}class $ extends b{*lines(t,e,i){const{settings:o,t:s,o:a}=this,{lutWidth:h,lutHeight:l,brightness:c,gamma:f,noise:v}=o,d=h*e,g=l*i,p=(t=>{if(t instanceof CanvasRenderingContext2D)return t;const{width:e,height:r}=t,i=n({width:e,height:r})();return i.drawImage(t,0,0),i})(_(t,d,g)).getImageData(0,0,d,g).data,x=new w(h,l);for(let t=0;g>t;t+=l){const n=[];for(let e=0;d>e;e+=h){let r=0,i=1/0;for(let n=0;l>n;n++)for(let i=0;h>i;i++){let o=e+i+(t+n)*d<<2;const s=c*(.2126*u(p[o++]/255)+.7152*u(p[o++]/255)+.0722*u(p[o++]/255))**f,a=v*(m()-.5);x[r++]=s+a}for(let t=a.length;t--;){const n=a[t].compare(x);i>n&&(i=n,r=t)}n.push(s[r])}yield r(...n)}}}const M=(t,n,e)=>{const r=`#version 300 es\n${e}`,i=t.createShader(n);if(t.shaderSource(i,r),t.compileShader(i),!t.getShaderParameter(i,35713))throw Error(`Shader error:\n${t.getShaderInfoLog(i)}\n${S(r)}\n`);return i},C=(t,n,e)=>{const r=t.createProgram();if(t.attachShader(r,n),t.attachShader(r,e),t.linkProgram(r),!t.getProgramParameter(r,35714))throw Error(`Program error: ${t.getProgramInfoLog(r)}`);return r},F=(t,n=3553)=>{const e=t.createTexture();return R(t,e,e=>t.bindTexture(n,e))},P=(t,n)=>e=>t.getUniformLocation(n,e),S=(t,n=1)=>t.replace(/^/gm,()=>`${n++}: `.padStart(5,"0")),R=(t,n,e)=>r=>(r&&(e(n),r(t,n),e(null)),n),U="in vec2 aPosition;\nout vec2 vPosition;\nvoid main() {\nvPosition = 0.5 + 0.5*aPosition;\ngl_Position = vec4(aPosition, 0., 1.);\n}\n",G="#define MAP3(f, v) vec3(f(v.x), f(v.y), f(v.z))\n#define RGB(x) mix(x/12.92, pow((x+.055)/1.055, 2.4), step(.04045, x))\n#define LUM(x) dot(x, vec3(.2126, .7152, .0722))\nprecision mediump float;\nuniform sampler2D uSrc;\nuniform float uBrightness;\nuniform float uGamma;\nuniform float uNoise;\nuniform float uRandom;\nin vec2 vPosition;\nout vec4 vFragColor;\nfloat hash13(vec3 p3) {\np3 = fract(p3 * 0.1031);\np3 += dot(p3, p3.yzx + 19.19);\nreturn fract((p3.x + p3.y) * p3.z);\n}\nvoid main() {\nvec3 srgb = texture(uSrc, vPosition).rgb;\nfloat signal = uBrightness * pow(LUM(MAP3(RGB, srgb)), uGamma);\nfloat noise = uNoise * (hash13(vec3(gl_FragCoord.xy, 1000.*uRandom)) - 0.5);\nvFragColor = vec4(vec3(clamp(signal + noise, 0., 1.)), 0.);\n}\n",A="#define U ${ width }\n#define V ${ height }\n#define X ${ width * height }\n#define Y ${ chars }\nprecision mediump float;\nuniform sampler2D uSrc;\nuniform sampler2D uLUT;\nuniform int uCharMap[Y];\nin vec2 vPosition;\nout vec4 vFragColor;\nstruct Result {\nint index;\nfloat value;\n};\nvoid main() {\nResult res = Result(0, float(X));\nivec2 pos = ivec2(vec2(textureSize(uSrc, 0))*vPosition) - ivec2(U, V)/2;\nfloat src[X];\nfor (int v = 0; v < V; v++)\nfor (int u = 0; u < U; u++)\nsrc[u + v*U] = texelFetch(uSrc, pos + ivec2(u, v), 0).r;\nfor (int y = 0; y < Y; y++) {\nfloat value = 0.;\nfor (int x = 0; x < X; x++)\nvalue += abs(src[x] - texelFetch(uLUT, ivec2(x, y), 0).r);\nif (res.value > value)\nres = Result(y, value);\n}\nvFragColor = vec4(uCharMap[res.index], 0, 0, 0);\n}\n",B=t=>{t.texParameteri(3553,10241,9728),t.texParameteri(3553,10240,9728)};class L extends b{constructor(t){super(t),this.h=((t,...n)=>{const r=e("canvas")().getContext("webgl2",t);if(!r)throw Error("WebGL2 is not available");for(const t of n)if(!r.getExtension(t))throw Error(`"${t}" extension is not available`);return r})({},"EXT_color_buffer_float"),this.u=((t,n=36160)=>{const e=t.createFramebuffer();return R(t,e,e=>t.bindFramebuffer(n,e))})(this.h)(),this.l=F(this.h)(B),this.v=F(this.h)(B),this.m=F(this.h)(B),this.g=w.combine(this.o),this.p=new Float32Array;const n=M(this.h,35633,U),r=M(this.h,35632,G),i=M(this.h,35632,((t,n={},e="$")=>Function(`{${Object.keys(n)}}`,e,`return \`${t}\``)(n,n))(A,{chars:this.t.length,width:this.settings.lutWidth,height:this.settings.lutHeight}));var o;this._=C(this.h,n,r),this.$=C(this.h,n,i),((t,n=34962)=>{const e=t.createBuffer();return R(t,e,e=>t.bindBuffer(n,e))})(this.h)((o=0,t=>{const n=Float32Array.of(1,1,-1,1,1,-1,-1,-1);t.bufferData(34962,n,35044),t.vertexAttribPointer(o,2,5126,!1,0,0),t.enableVertexAttribArray(o)}))}*lines(t,n,e){const{settings:i,t:o,g:s,h:a,_:h,$:u,u:l,l:c,v:f,m:v}=this,d=i.lutWidth*n,p=i.lutHeight*e,x=g(_(t,d,p)),w=P(a,h),y=P(a,u),b=n*e,$=b<<2;this.p.length!==$&&(this.p=new Float32Array($)),a.bindFramebuffer(36160,l),a.activeTexture(33986),a.bindTexture(3553,c),a.texImage2D(3553,0,33326,s.width,s.height,0,6403,5126,s),a.activeTexture(33985),a.bindTexture(3553,f),a.texImage2D(3553,0,6408,6408,5121,x),a.activeTexture(33984),a.bindTexture(3553,v),a.texImage2D(3553,0,33326,d,p,0,6403,5126,null),a.framebufferTexture2D(36160,36064,3553,v,0),a.useProgram(h),a.uniform1i(w("uSrc"),1),a.uniform1f(w("uBrightness"),i.brightness),a.uniform1f(w("uGamma"),i.gamma),a.uniform1f(w("uNoise"),i.noise),a.uniform1f(w("uRandom"),m()),a.viewport(0,0,d,p),a.drawArrays(5,0,4),a.activeTexture(33985),a.bindTexture(3553,v),a.activeTexture(33984),a.bindTexture(3553,f),a.texImage2D(3553,0,33326,d,p,0,6403,5126,null),a.framebufferTexture2D(36160,36064,3553,f,0),a.useProgram(u),a.uniform1i(y("uSrc"),1),a.uniform1i(y("uLUT"),2),a.uniform1iv(y("uCharMap"),o),a.viewport(0,0,n,e),a.drawArrays(5,0,4),a.readPixels(0,0,n,e,6408,5126,this.p),a.bindFramebuffer(36160,null);for(let t=0;b>t;t++)this.p[t]=this.p[t<<2];for(let t=0;b>t;)yield r(...this.p.subarray(t,t+=n))}}export{$ as CPURenderer,L as GPURenderer,w as LUT,b as Renderer,h as charSets,y as defaults};
//# sourceMappingURL=bundle.esm.min.js.map
